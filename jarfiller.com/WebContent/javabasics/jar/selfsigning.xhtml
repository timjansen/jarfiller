<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:page="http://tjansen.de/refPage" xmlns:i="http://tjansen.de/internal"><head><title>How to Create a (Self-)Signed Jar - Java Basics: JAR Files</title><meta http-equiv="X-UA-Compatible" content="chrome=1"/><meta http-equiv="content-language" content="en"/><link rel="shortcut icon" href="../../images/favicon.png" type="image/png"/><link rel="stylesheet" type="text/css" href="../../style/style.css"/><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6791190-2']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script><script type="text/javascript" src="../../js/all.js"/></head><body id="body"><div id="visibleContent"><div id="top"><a href="/"><img src="../../images/titlebar.png" alt="Jarfiller.com"/></a></div><div id="main"><div id="bodycolumn"><div class="yahbar"><div class="yahprev"><a href="libraries.xhtml">Prev</a></div><h3 class="yahhere"><a href="#" onclick="return navToggle();">Java Basics: JAR Files / How to...</a></h3><div class="yahnext"><a href="certification.xhtml">Next</a></div></div><h1 id="sec_howto" class="multipageTitle">How to Create a (Self-)Signed Jar</h1><div class="subSecRow2" id="sec_selfsigning"><div class="subSecHead" id="sechd_selfsigning"><a name="selfsigning">Self-Signing</a></div><div class="subSecContent" id="seccnt_selfsigning"><p class="subSecExplanation">Some JARs need to be signed, for example a JAR containing a Java Applet that requires certain privileges. Signing means that a <a href="http://en.wikipedia.org/wiki/Digital_signature">digital signature</a> is used to <em>authenticate the author of the JAR</em>. How exactly digital signatures work is out of the scope of this document (read the <a href="http://en.wikipedia.org/wiki/Digital_signature">Wikipedia article</a> as starting point), but what it effectively does is <em>let somebody certify your identity</em>. Idealy, but not necessarily, this somebody is a trusted <a href="http://en.wikipedia.org/wiki/Certificate_authority">certificate authority</a>.</p><p class="subSecExplanation">A digital signature has two main components. The first one is your <em>private key</em> that represents you. And then you need a certificate by somebody who certifies that you are who you claim to be. In the simplest case, you can create the certificate yourself. This is called a <em>self-signed certificate</em>. Obviously it is not very trustworthy, because anybody can certificate himself to be anybody. But for testing this is usually the easiest solution. Beside the lack of security, the major disadvantage of self-signed certificates is that the user will see a lot of warnings when installing your software, and may even be unable to install it without having system administrator privileges.</p><p class="subSecExplanation">If you want to <em>publish your software for the public, you should get a real certificate</em> from a trusted certificate authority. The next how-to will help you get this, but for now, I show you how to create a self-signed certificate.</p><p class="subSecExplanation">To sign a JAR, the first thing you need is the private key. Only you should own this key, as anybody who gets hold of it can claim to be you. Java <em>stores keys in a file called keystore</em>. You must assign each key in the keystore a name, called "alias" by Java (<a href="#" id="tl-d37368e1486" class="dottedTooltip" onclick="return tlClick('tl-d37368e1486','pp-d37368e1486');" onmouseover="return tlOver('tl-d37368e1486','pp-d37368e1486');" onmouseout="return tlOut('tl-d37368e1486','pp-d37368e1486');">more</a>). The main tool to manage keystores is a command line tool called <a href="http://java.sun.com/javase/6/docs/technotes/tools/solaris/keytool.html"><span class="idf">keytool</span></a> which ships with the JDK.</p><p class="subSecExplanation">This is how to create a new key, either adding it to an existing keystore or creating a new one. The key will automatically be self-signed:</p><pre class="subSecConsole">C:\Users\tim\tmp&gt;keytool <a href="#" id="tl-d37368e1500" class="dottedTooltip" onclick="return tlClick('tl-d37368e1500','pp-d37368e1503');" onmouseover="return tlOver('tl-d37368e1500','pp-d37368e1503');" onmouseout="return tlOut('tl-d37368e1500','pp-d37368e1503');">-genkey</a> <a href="#" id="tl-d37368e1520" class="dottedTooltip" onclick="return tlClick('tl-d37368e1520','pp-d37368e1523');" onmouseover="return tlOver('tl-d37368e1520','pp-d37368e1523');" onmouseout="return tlOut('tl-d37368e1520','pp-d37368e1523');">-keyalg RSA</a> <a href="#" id="tl-d37368e1527" class="dottedTooltip" onclick="return tlClick('tl-d37368e1527','pp-d37368e1530');" onmouseover="return tlOver('tl-d37368e1527','pp-d37368e1530');" onmouseout="return tlOut('tl-d37368e1527','pp-d37368e1530');">-alias myFirstKey</a> <a href="#" id="tl-d37368e1534" class="dottedTooltip" onclick="return tlClick('tl-d37368e1534','pp-d37368e1537');" onmouseover="return tlOver('tl-d37368e1534','pp-d37368e1537');" onmouseout="return tlOut('tl-d37368e1534','pp-d37368e1537');">-keystore myKeystore</a> <a href="#" id="tl-d37368e1540" class="dottedTooltip" onclick="return tlClick('tl-d37368e1540','pp-d37368e1543');" onmouseover="return tlOver('tl-d37368e1540','pp-d37368e1543');" onmouseout="return tlOut('tl-d37368e1540','pp-d37368e1543');">-validity 360</a>
<br/></pre><p class="subSecExplanation">The command will ask you a couple of questions. First you can protect your keystore with a password, if you create a new one. You should do this if you plan to publish software with the keys in the keystore. Then it will ask you for your name, organization and location. This information is what will be shown to the user and possibly be certified by the certificate authority, so be careful to enter the right values. </p><p class="subSecExplanation"> Now that you have a (self-signed) key, you can easily sign your JAR with the <span class="idf">jarsigner</span> tool:</p><pre class="subSecConsole">C:\Users\tim\tmp&gt;jarsigner.exe <a href="#" id="tl-d37368e1560" class="dottedTooltip" onclick="return tlClick('tl-d37368e1560','pp-d37368e1563');" onmouseover="return tlOver('tl-d37368e1560','pp-d37368e1563');" onmouseout="return tlOut('tl-d37368e1560','pp-d37368e1563');">-keystore myKeystore</a> <a href="#" id="tl-d37368e1567" class="dottedTooltip" onclick="return tlClick('tl-d37368e1567','pp-d37368e1570');" onmouseover="return tlOver('tl-d37368e1567','pp-d37368e1570');" onmouseout="return tlOut('tl-d37368e1567','pp-d37368e1570');">-verbose</a> <a href="#" id="tl-d37368e1577" class="dottedTooltip" onclick="return tlClick('tl-d37368e1577','pp-d37368e1580');" onmouseover="return tlOver('tl-d37368e1577','pp-d37368e1580');" onmouseout="return tlOut('tl-d37368e1577','pp-d37368e1580');">jarfiller-example.jar</a> <a href="#" id="tl-d37368e1584" class="dottedTooltip" onclick="return tlClick('tl-d37368e1584','pp-d37368e1587');" onmouseover="return tlOver('tl-d37368e1584','pp-d37368e1587');" onmouseout="return tlOut('tl-d37368e1584','pp-d37368e1587');">myKey</a>
<br/></pre></div></div><div class="yahbar"><div class="yahprev"><a href="libraries.xhtml">Prev<br/><span>How to Add Libraries to a JAR</span></a></div><div class="yahhere"><a href="#" onclick="return navToggle();">Java Basics: JAR Files / How to...</a><br/><a href="/javabasics/jar/"><span>Single Page Mode</span></a>, <a href="#" onclick="return navToggle();"><span>Show Table of Content</span></a></div><div class="yahnext"><a href="certification.xhtml">Next<br/><span>How to Sign a Jar with a Valid Certificate</span></a></div></div></div><div id="sidecolumn">
  	  	<div><h3>Useful Links</h3><div class="sidecolumnSubTitleLine"/>
  			<a href="http://java.sun.com/javase/6/docs/technotes/guides/jar/index.html">Java Documentation</a><br/>
  			<a href="http://java.sun.com/javase/6/docs/technotes/guides/jar/jar.html">JAR File Specification</a><br/>
  			<a href="http://en.wikipedia.org/wiki/JAR_(file_format)">JAR on Wikipedia</a><br/>
  		</div>
  </div></div></div><div id="footer"><div id="footer-content"><div id="footer-left"><div class="footerLine"><a href="/">Home</a> - <a href="/about">About Jarfiller</a> - <a href="/imprint.xhtml">Imprint</a></div><div class="footerLine">Please send feedback and corrections to <a href="mailto:tim@tjansen.de">tim@<span style="display: none">got you</span>tjansen.de</a>.</div><div class="footerLine"><a href="http://www.twitter.com/timjansen">Follow</a> me on Twitter.</div><div class="copyrightLine">Â© 2010 Tim Jansen; content licensed under <a href="http://creativecommons.org/licenses/by/3.0/us/">cc-by</a>; example source code is public domain
				</div></div><div id="footer-right"><a rel="license" href="http://creativecommons.org/licenses/by/3.0/us/"><img alt="Creative Commons License" style="border-width:0" src="../../images/ext/cc-by-88x31.png"/></a></div></div></div><div id="navbar" onclick="return navToggle();" onmouseover="document.getElementById('navbar').className='mouseover';" onmouseout="document.getElementById('navbar').className='';"/><div id="navcontainer"><div id="navlinks"><div id="navclosebar"><a href="#" onclick="return navClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="navpositionbar" class="navpositionbar"/><h2 id="navtitle">Java Basics: JAR Files</h2><a id="nav_overview" class="navseclink" href="overview.xhtml#overview">Overview</a><a id="nav_intro" class="navsublink" href="overview.xhtml#intro">Intro</a><a id="nav_usecases" class="navsublink" href="overview.xhtml#usecases">When to use JARs</a><a id="nav_requirements" class="navsublink" href="overview.xhtml#requirements">Requirements</a><a id="nav_creatingjars" class="navseclink" href="creatingjars.xhtml#creatingjars">Creating JARs</a><a id="nav_structure" class="navsublink" href="creatingjars.xhtml#structure">Structure</a><a id="nav_manifest" class="navsublink" href="creatingjars.xhtml#manifest">Manifest</a><a id="nav_jartool" class="navsublink" href="creatingjars.xhtml#jartool">jar tool</a><span class="navseclink">How to...</span><a id="nav_executables" class="navsublink" href="executables.xhtml#executables">How to Start an Executable JAR</a><a id="nav_viewextract" class="navsublink" href="viewextract.xhtml#viewextract">How to View and Extract a JAR</a><a id="nav_libraries" class="navsublink" href="libraries.xhtml#libraries">How to Add Libraries to a JAR</a><a id="nav_selfsigning" class="navsublink" href="selfsigning.xhtml#selfsigning">How to Create a (Self-)Signed Jar</a><a id="nav_certification" class="navsublink" href="certification.xhtml#certification">How to Sign a Jar with a Valid Certificate</a><a id="nav_perentry" class="navsublink" href="perentry.xhtml#perentry">How to Specify Attributes For Single Packages (Per-Entry Attributes)</a><a id="nav_sealing" class="navsublink" href="sealing.xhtml#sealing">How to Seal Packages in a JAR</a><a id="nav_jarmetadata" class="navsublink" href="jarmetadata.xhtml#jarmetadata">How to Get Package Versioning Information</a><a id="nav_eclipse" class="navsublink" href="eclipse.xhtml#eclipse">How to Create JARs with Eclipse</a><a id="nav_ant" class="navsublink" href="ant.xhtml#ant">How to Create JARs with Ant</a></div></div><div id="popups"><div id="pp-d37368e1486" class="tooltip">The alias of a key is just a mechanism of the keystore to allow you to manage your keys. An alias is not part of the key itself.</div><div id="pp-d37368e1503" class="tooltip"><span class="idf">-genkey</span> generates a key. <br/>Note that Java SE 6 renamed the command to <span class="idf">-genkeypair</span> (<span class="idf">-genkey</span> still works though). The reason for the new name is that <span class="idf">-genkey</span> actually creates a key pair (one public key and one private key), but these are only the internals of asymetric cryptography and you don't need to worry about them. There is only one thing to work with in the keytool, and that's the key.</div><div id="pp-d37368e1523" class="tooltip">This specifies the key algorithm, called RSA. This is another cryptography detail which you shouldn't need to worry about. The reason why RSA is chosen here (and not DSA, the default) is that the big certificate authorities require RSA. For a self-signed key DSA would be fine.</div><div id="pp-d37368e1530" class="tooltip">This specifies the name (=alias) of the key in the keystore. You can chose any alias you want, as long as it does not exist yet.</div><div id="pp-d37368e1537" class="tooltip">This specifies the path to the keystore file. If there is no keystore file at this location, a new one will be created.</div><div id="pp-d37368e1543" class="tooltip">Specifies how long your key will be valid in days. For a development key you should use a rather high value, to avoid having to change your key every few months. The default is 90 days.</div><div id="pp-d37368e1563" class="tooltip">This specifies the path to the keystore file. </div><div id="pp-d37368e1570" class="tooltip">Turns on some extra-output, so you can see what <span class="idf">jarsigner</span> is doing.</div><div id="pp-d37368e1580" class="tooltip">The path to the JAR to sign. The existing JAR will be modified.</div><div id="pp-d37368e1587" class="tooltip">The alias of the key in the keystore. This must be the <span class="idf">-alias</span> you specified for the <span class="idf">-genkey</span> command.</div><div id="ttCloseBar" class="closeBar"><a href="#" onclick="return tlClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="topicCloseBar" class="closeBar"><a href="#" onclick="return tpcClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div></div></body></html>