<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:page="http://tjansen.de/refPage" xmlns:i="http://tjansen.de/internal"><head><title>How to Write a Custom-Mapping for User-Defined Types - JDBC Guide</title><meta http-equiv="X-UA-Compatible" content="chrome=1"/><meta http-equiv="content-language" content="en"/><link rel="shortcut icon" href="../../images/favicon.png" type="image/png"/><link rel="stylesheet" type="text/css" href="../../style/style.css"/><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6791190-2']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script><script type="text/javascript" src="../../js/all.js"/></head><body id="body"><div id="visibleContent"><div id="top"><a href="/"><img src="../../images/titlebar.png" alt="Jarfiller.com"/></a></div><div id="main"><div id="bodycolumn"><div class="yahbar"><div class="yahprev"><a href="autokeys.xhtml">Prev</a></div><h3 class="yahhere"><a href="#" onclick="return navToggle();">JDBC Guide / How to...</a></h3><div class="yahnext"><a href="distinct.xhtml">Next</a></div></div><h1 id="sec_howto" class="multipageTitle">How to Write a Custom-Mapping for User-Defined Types</h1><div class="subSecRow1" id="sec_userdefinedtypes"><div class="subSecHead" id="sechd_userdefinedtypes"><a name="userdefinedtypes">Java Objects</a></div><div class="subSecContent" id="seccnt_userdefinedtypes"><p class="subSecExplanation">If you have user-defined types (<a href="#" id="tl-d5630e8462" class="dottedTooltip" onclick="return tlClick('tl-d5630e8462','pp-d5630e9003');" onmouseover="return tlOver('tl-d5630e8462','pp-d5630e9003');" onmouseout="return tlOut('tl-d5630e8462','pp-d5630e9003');">composite</a> or <a href="#" id="tl-d5630e8466" class="dottedTooltip" onclick="return tlClick('tl-d5630e8466','pp-d5630e8469');" onmouseover="return tlOver('tl-d5630e8466','pp-d5630e8469');" onmouseout="return tlOut('tl-d5630e8466','pp-d5630e8469');">scalar</a>), you can <em>write your own Java class and declare map it on the user-defined type</em>. If you don't do this, you have to treat them <a href="structs.xhtml#structs">as Struct</a> or <a href="distinct.xhtml#distinct">as distinct type</a>.</p><p class="subSecExplanation"> The Java class representing your user-defined type <em>must implement the <a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLData.html" class="javadoc">SQLData</a> interface</em> (mapping a POJO is not possible) and <em>have a constructor without arguments</em>. <a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLData.html" class="javadoc">SQLData</a> works similar to serialization, you read from a stream of JDBC types to create an instance and write to a stream of JDBC types to write it later. </p><p class="subSecExplanation">Here is an Oracle definition of a user-defined type and a table that uses it:</p><pre class="subSecConfig"><em>CREATE TYPE Encoding</em> AS object (
	encoderName VARCHAR(30),
	pixelLines INT,
	bitrateMbits FLOAT
)

CREATE TABLE MovieEncodings (
  movieRef    int,
  hd <em>VideoEncoding</em>,
  sd <em>VideoEncoding</em>,
  mobile <em>VideoEncoding</em>,
  FOREIGN KEY (movieRef) REFERENCES Movie(id)
)</pre><h4 class="subSecMiniHeadline">Writing the Custom Type</h4><p class="subSecExplanation">This class implements <a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLData.html" class="javadoc">SQLData</a> to handle the <span class="idf">VideoEncoding</span> type:</p><pre class="subSecCode"><code>public class VideoEncoding <em>implements <a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLData.html" class="javadoc">SQLData</a></em> {

    private String typeName = "VIDEOENCODING";  <span class="cmt">// default name in capitals(<a href="#" id="tl-d5630e8549" class="dottedTooltip" onclick="return tlClick('tl-d5630e8549','pp-d5630e8549');" onmouseover="return tlOver('tl-d5630e8549','pp-d5630e8549');" onmouseout="return tlOut('tl-d5630e8549','pp-d5630e8549');">more</a>)</span>
    public String encoderName;                  <span class="cmt">// public only to avoid writing getters</span>
    public int pixelLines;
    public double bitrateMbits;

    public <em>VideoEncoding()</em> {                    <span class="cmt">// <em>required:</em> constructor without arguments</span>
    }

    <span class="cmt">// convenience constructor</span>
    public VideoEncoding(String encoderName, int pixelLines, double bitrateMbits) {
        this.encoderName = encoderName;
        this.pixelLines = pixelLines;
        this.bitrateMbits = bitrateMbits;
    }

    public String <a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLData.html#getSQLTypeName()" class="javadoc"><em>getSQLTypeName</em></a>() {
        return typeName;
    }

    public void <a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLData.html#readSQL(java.sql.SQLInput, java.lang.String)" class="javadoc"><em>readSQL</em></a>(<a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLInput.html" class="javadoc">SQLInput</a> stream, String typeName) throws <a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLException.html" class="javadoc">SQLException</a> {
        this.typeName = typeName;               <span class="cmt">// store name for <span class="idf">getSQLTypeName</span></span>

        encoderName = stream.<a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLInput.html#readString()" class="javadoc">readString</a>();      <span class="cmt">// in order of DB declaration</span>
        pixelLines = stream.<a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLInput.html#readInt()" class="javadoc">readInt</a>();
        bitrateMbits = stream.<a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLInput.html#readDouble()" class="javadoc">readDouble</a>();
    }

    public void <a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLData.html#writeSQL(java.sql.SQLOutput)" class="javadoc"><em>writeSQL</em></a>(<a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLOutput.html" class="javadoc">SQLOutput</a> stream) throws <a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLException.html" class="javadoc">SQLException</a> {
        stream.<a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLOutput.html#writeString(java.lang.String)" class="javadoc">writeString</a>(encoderName);
        stream.<a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLOutput.html#writeInt(java.lang.String)" class="javadoc">writeString</a>(pixelLines);
        stream.<a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLOutput.html#writeDouble(java.lang.String)" class="javadoc">writeString</a>(bitrateMbits);
    }
}
</code></pre><h4 class="subSecMiniHeadline">SQLData Types as Parameters</h4><p class="subSecExplanation"> <a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLData.html" class="javadoc">SQLData</a>-based types can be set as parameters using <a href="http://java.sun.com/javase/6/docs/api/java/sql/PreparedStatement.html#setObject(int, java.lang.Object)" class="javadoc">setObject</a>: </p><pre class="subSecCode"><code><a href="http://java.sun.com/javase/6/docs/api/java/sql/Connection.html" class="javadoc">Connection</a> connection = <span class="abstract">...</span>;
String sql = "INSERT INTO MovieEncodings(movieRef, hd, sd, mobile) VALUES(1, ?, ?, ?)";
<a href="http://java.sun.com/javase/6/docs/api/java/sql/PreparedStatement.html" class="javadoc">PreparedStatement</a> stmt = connection.<a href="http://java.sun.com/javase/6/docs/api/java/sql/Connection.html#prepareStatement(java.lang.String)" class="javadoc">prepareStatement</a>(sql);

VideoEncoding hd = new VideoEncoding("MPEG2", 1080, 20);
stmt.<a href="http://java.sun.com/javase/6/docs/api/java/sql/PreparedStatement.html#setObject(int, java.lang.Object)" class="javadoc"><em>setObject</em></a>(1, hd);  <span class="cmt">// use <span class="idf">Object</span> accessors for custom types</span>

VideoEncoding sd = new VideoEncoding("H264", 640, 1.5);
stmt.<a href="http://java.sun.com/javase/6/docs/api/java/sql/PreparedStatement.html#setObject(int, java.lang.Object)" class="javadoc"><em>setObject</em></a>(2, sd);

VideoEncoding mobile = new VideoEncoding("3GP", 200, 0.02);
stmt.<a href="http://java.sun.com/javase/6/docs/api/java/sql/PreparedStatement.html#setObject(int, java.lang.Object)" class="javadoc"><em>setObject</em></a>(3, mobile);

stmt.<a href="http://java.sun.com/javase/6/docs/api/java/sql/PreparedStatement.html#executeUpdate()" class="javadoc">executeUpdate</a>();
</code></pre><h4 class="subSecMiniHeadline">Reading SQLData Types</h4><p class="subSecExplanation">Before you can read a <a href="http://java.sun.com/javase/6/docs/api/java/sql/SQLData.html" class="javadoc">SQLData</a>-based type you need to <em>add your class to the type map</em>. After that you can <em>read it using <a href="http://java.sun.com/javase/6/docs/api/java/sql/ResultSet.html#getObject(java.lang.String)" class="javadoc">getObject</a></em>: </p><pre class="subSecCode"><code><a href="http://java.sun.com/javase/6/docs/api/java/sql/Connection.html" class="javadoc">Connection</a> connection = <span class="abstract">...</span> ;

<span class="cmt">// Add mapping class to type map</span>
Map&lt;String,Class&lt;?&gt;&gt; typeMap = connection.<a href="http://java.sun.com/javase/6/docs/api/java/sql/Connection.html#getTypeMap()" class="javadoc"><em>getTypeMap</em></a>();
typeMap.put("<em>VIDEOENCODING</em>", <em>VideoEncoding.class</em>);  <span class="cmt">// upper case required for Oracle</span>
connection.<a href="http://java.sun.com/javase/6/docs/api/java/sql/Connection.html#setTypeMap(java.util.Map)" class="javadoc"><em>setTypeMap</em></a>(typeMap);

String sql = "SELECT hd FROM MovieEncodings WHERE movieRef=1";
<a href="http://java.sun.com/javase/6/docs/api/java/sql/PreparedStatement.html" class="javadoc">PreparedStatement</a> stmt = connection.<a href="http://java.sun.com/javase/6/docs/api/java/sql/Connection.html#prepareStatement(java.lang.String)" class="javadoc">prepareStatement</a>(sql);
<a href="http://java.sun.com/javase/6/docs/api/java/sql/ResultSet.html" class="javadoc">ResultSet</a> rs = stmt.<a href="http://java.sun.com/javase/6/docs/api/java/sql/PreparedStatement.html#executeQuery()" class="javadoc">executeQuery</a>();

while (rs.<a href="http://java.sun.com/javase/6/docs/api/java/sql/ResultSet.html#next()" class="javadoc">next</a>()) {
    <a href="http://java.sun.com/javase/6/docs/api/java/sql/VideoEncoding.html" class="javadoc"><em>VideoEncoding</em></a> hdEncoding = <a href="http://java.sun.com/javase/6/docs/api/java/sql/(VideoEncoding) rs.getObject.html" class="javadoc"><em>(VideoEncoding) rs.getObject</em></a>("hd");

    System.out.printf("Encoder: %s Lines: %s bitrate: %s Mbit/s\n", 
                      hdEncoding.encoderName, hdEncoding.pixelLines, hdEncoding.bitrateMbits);
}
</code></pre><p class="subSecExplanation"/></div></div><div class="yahbar"><div class="yahprev"><a href="autokeys.xhtml">Prev<br/><span>How to Retrieve Generated Values (Auto-Generated Keys)</span></a></div><div class="yahhere"><a href="#" onclick="return navToggle();">JDBC Guide / How to...</a><br/><a href="/guide/jdbc/"><span>Single Page Mode</span></a>, <a href="#" onclick="return navToggle();"><span>Show Table of Content</span></a></div><div class="yahnext"><a href="distinct.xhtml">Next<br/><span>How to Handle Scalar User-Defined Types (Distinct)?</span></a></div></div></div><div id="sidecolumn">
    	<div><h3>Useful Links</h3><div class="sidecolumnSubTitleLine"/>
  			<a href="http://java.sun.com/javase/technologies/database/">JDBC Homepage</a><br/>
  			<a href="http://en.wikipedia.org/wiki/Java_Database_Connectivity">JDBC on Wikipedia</a><br/>
  			<a href="http://java.sun.com/javase/6/docs/api/java/sql/package-summary.html">java.sql API Docs</a><br/>
  			<a href="http://java.sun.com/javase/6/docs/api/javax/sql/package-summary.html">javax.sql API Docs</a><br/>
  			<a href="http://jcp.org/aboutJava/communityprocess/final/jsr221/index.html">JDBC 4.0 Specification</a><br/>
  		</div>
  </div></div></div><div id="footer"><div id="footer-content"><div id="footer-left"><div class="footerLine"><a href="/">Home</a> - <a href="/about">About Jarfiller</a> - <a href="/imprint.xhtml">Imprint</a></div><div class="footerLine">Please send feedback and corrections to <a href="mailto:tim@tjansen.de">tim@<span style="display: none">got you</span>tjansen.de</a>.</div><div class="footerLine"><a href="http://www.twitter.com/timjansen">Follow</a> me on Twitter.</div><div class="copyrightLine">© 2010 Tim Jansen; content licensed under <a href="http://creativecommons.org/licenses/by/3.0/us/">cc-by</a>; example source code is public domain
				</div></div><div id="footer-right"><a rel="license" href="http://creativecommons.org/licenses/by/3.0/us/"><img alt="Creative Commons License" style="border-width:0" src="../../images/ext/cc-by-88x31.png"/></a></div></div></div><div id="navbar" onclick="return navToggle();" onmouseover="document.getElementById('navbar').className='mouseover';" onmouseout="document.getElementById('navbar').className='';"/><div id="navcontainer"><div id="navlinks"><div id="navclosebar"><a href="#" onclick="return navClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="navpositionbar" class="navpositionbar"/><h2 id="navtitle">JDBC Guide</h2><a id="nav_overview" class="navseclink" href="overview.xhtml#overview">Overview</a><a id="nav_intro" class="navsublink" href="overview.xhtml#intro">Intro</a><a id="nav_usecases" class="navsublink" href="overview.xhtml#usecases">When should you use JDBC for?</a><a id="nav_requirements" class="navsublink" href="overview.xhtml#requirements">What do you need for JDBC?</a><a id="nav_connecting" class="navseclink" href="connecting.xhtml#connecting">Connecting</a><a id="nav_standalone" class="navsublink" href="connecting.xhtml#standalone">Stand-Alone</a><a id="nav_jeecontainer" class="navsublink" href="connecting.xhtml#jeecontainer">JEE Container</a><a id="nav_javadb" class="navsublink" href="connecting.xhtml#javadb">Connecting to Java DB</a><a id="nav_postgresql" class="navsublink" href="connecting.xhtml#postgresql">Connecting to PostgreSQL</a><a id="nav_oracle" class="navsublink" href="connecting.xhtml#oracle">Connecting to Oracle Database</a><a id="nav_exampleschema" class="navsublink" href="connecting.xhtml#exampleschema">Database Schema for the Following Examples</a><a id="nav_updatesandqueries" class="navseclink" href="updatesandqueries.xhtml#updatesandqueries">Updates and Queries</a><a id="nav_update" class="navsublink" href="updatesandqueries.xhtml#update">Update</a><a id="nav_query" class="navsublink" href="updatesandqueries.xhtml#query">Query</a><a id="nav_valueconversion" class="navsublink" href="updatesandqueries.xhtml#valueconversion">Value Conversion</a><a id="nav_colindex" class="navsublink" href="updatesandqueries.xhtml#colindex">Column Index</a><a id="nav_parameters" class="navseclink" href="parameters.xhtml#parameters">Parameters</a><a id="nav_parameters1" class="navsublink" href="parameters.xhtml#parameters1">Parameters</a><a id="nav_reusing" class="navsublink" href="parameters.xhtml#reusing">Reusing Statements</a><a id="nav_workstatements" class="navseclink" href="workstatements.xhtml#workstatements">Working with Statements</a><a id="nav_transactions" class="navsublink" href="workstatements.xhtml#transactions">Transactions</a><a id="nav_closing" class="navsublink" href="workstatements.xhtml#closing">Closing Resources</a><a id="nav_plainstatements" class="navseclink" href="plainstatements.xhtml#plainstatements">Plain Statements</a><a id="nav_plainstatements1" class="navsublink" href="plainstatements.xhtml#plainstatements1">Plain Statement</a><a id="nav_escape" class="navseclink" href="escape.xhtml#escape">SQL Escape Syntax</a><a id="nav_escapesyntax" class="navsublink" href="escape.xhtml#escapesyntax">Escape Syntax</a><a id="nav_dateliterals" class="navsublink" href="escape.xhtml#dateliterals">Date Literals</a><a id="nav_escapefunctions" class="navsublink" href="escape.xhtml#escapefunctions">Functions</a><a id="nav_escapefunctionlist" class="navsublink" href="escape.xhtml#escapefunctionlist">List of Supported Functions</a><a id="nav_storedproceduresescape" class="navsublink" href="escape.xhtml#storedproceduresescape">Stored Procedures</a><a id="nav_likeescape" class="navsublink" href="escape.xhtml#likeescape">LIKE Escape</a><a id="nav_outerjoinsescape" class="navsublink" href="escape.xhtml#outerjoinsescape">Outer Joins</a><span class="navseclink">How to...</span><a id="nav_storedprocedures" class="navsublink" href="storedprocedures.xhtml#storedprocedures">How to Invoke Stored Procedures (CallableStatement)</a><a id="nav_readingnull" class="navsublink" href="readingnull.xhtml#readingnull">How to Find Out Whether a ResultSet Column is NULL</a><a id="nav_cursors" class="navsublink" href="cursors.xhtml#cursors">How to Navigate in the ResultSet (Cursors)</a><a id="nav_holdablers" class="navsublink" href="holdablers.xhtml#holdablers">How to Control ResultSet Holdability</a><a id="nav_arrays" class="navsublink" href="arrays.xhtml#arrays">How to Handle SQL Arrays</a><a id="nav_creatingsql" class="navsublink" href="creatingsql.xhtml#creatingsql">How to Escape Strings in SQL to Prevent SQL Injection Attacks</a><a id="nav_batch" class="navsublink" href="batch.xhtml#batch">How to Do a Batch Updates</a><a id="nav_performance" class="navsublink" href="performance.xhtml#performance">How to Improve Performance</a><a id="nav_dateandtime" class="navsublink" href="dateandtime.xhtml#dateandtime">How to Handle Date and Time</a><a id="nav_fetchsizes" class="navsublink" href="fetchsizes.xhtml#fetchsizes">How to Set the Fetch Size</a><a id="nav_timeout" class="navsublink" href="timeout.xhtml#timeout">How to Set the Query Timeout</a><a id="nav_rowsets" class="navsublink" href="rowsets.xhtml#rowsets">What are RowSets?</a><a id="nav_dbmetadata" class="navsublink" href="dbmetadata.xhtml#dbmetadata">How to Find Out the Database's Capabilities (DatabaseMetaData)</a><a id="nav_resultsetmetadata" class="navsublink" href="resultsetmetadata.xhtml#resultsetmetadata">How to Find Out About the Columns of a ResultSet (ResultSetMetaData)</a><a id="nav_blobs" class="navsublink" href="blobs.xhtml#blobs">How to Use Blobs and Clobs</a><a id="nav_xml" class="navsublink" href="xml.xhtml#xml">How to Access XML</a><a id="nav_arrayparameters" class="navsublink" href="arrayparameters.xhtml#arrayparameters">How to Pass an Array as Parameter for the IN operator</a><a id="nav_transactionisolation" class="navsublink" href="transactionisolation.xhtml#transactionisolation">How to Set the Transaction Isolation Level</a><a id="nav_drivercats" class="navsublink" href="drivercats.xhtml#drivercats">What are JDBC Driver Categories?</a><a id="nav_wheretoputstatements" class="navsublink" href="wheretoputstatements.xhtml#wheretoputstatements">Where to Put SQL Statements</a><a id="nav_dboverview" class="navsublink" href="dboverview.xhtml#dboverview">Which Database is the Right One? (Short Database Overview)</a><a id="nav_concurrency" class="navsublink" href="concurrency.xhtml#concurrency">How to Use JDBC in Multi-Threaded Applications</a><a id="nav_warnings" class="navsublink" href="warnings.xhtml#warnings">How to Read Warnings by the Driver or Database (SQLWarning)</a><a id="nav_types" class="navsublink" href="types.xhtml#types">How to Map Between Java Types and JDBC Types</a><a id="nav_todo" class="navsublink" href="todo.xhtml#todo">TODO</a><a id="nav_appservertransactions" class="navsublink" href="appservertransactions.xhtml#appservertransactions">How to Use Transactions in an Application Server</a><a id="nav_autokeys" class="navsublink" href="autokeys.xhtml#autokeys">How to Retrieve Generated Values (Auto-Generated Keys)</a><a id="nav_userdefinedtypes" class="navsublink" href="userdefinedtypes.xhtml#userdefinedtypes">How to Write a Custom-Mapping for User-Defined Types</a><a id="nav_distinct" class="navsublink" href="distinct.xhtml#distinct">How to Handle Scalar User-Defined Types (Distinct)?</a><a id="nav_structs" class="navsublink" href="structs.xhtml#structs">How to Read Composite Types (Structs)</a><a id="nav_nullparameters" class="navsublink" href="nullparameters.xhtml#nullparameters">How to Set Parameters to NULL</a><a id="nav_wrapper" class="navsublink" href="wrapper.xhtml#wrapper">How to Access Driver Classes When the Application Server Wraps Them</a><a id="nav_andnow" class="navseclink" href="andnow.xhtml#andnow">And now...?</a><a id="nav_nextsteps" class="navsublink" href="andnow.xhtml#nextsteps">Next Steps</a></div></div><div id="popups"><div id="pp-d5630e8549" class="tooltip">This name is needed when you insert an <span class="idf">VideoEncoding</span> without reading it first. It tells the database what <em>the corresponding user-defined type</em> is. If you only read the object, you don't need to set it.<br/>Oracle requires type names to be capital letters.</div><div id="pp-d5630e8469" class="tooltip">A scalar types consists only of a single value, like a single string or a single number. Types that consist of several scalar types are called composite types.</div><div id="ttCloseBar" class="closeBar"><a href="#" onclick="return tlClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="topicCloseBar" class="closeBar"><a href="#" onclick="return tpcClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div></div></body></html>