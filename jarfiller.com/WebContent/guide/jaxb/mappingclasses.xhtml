<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:page="http://tjansen.de/refPage" xmlns:i="http://tjansen.de/internal"><head><title>Mapping Classes - JAXB Guide</title><meta http-equiv="X-UA-Compatible" content="chrome=1"/><meta http-equiv="content-language" content="en"/><link rel="shortcut icon" href="../../images/favicon.png" type="image/png"/><link rel="stylesheet" type="text/css" href="../../style/style.css"/><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6791190-2']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script><script type="text/javascript" src="../../js/all.js"/></head><body id="body"><div id="visibleContent"><div id="top"><a href="/"><img src="../../images/titlebar.png" alt="Jarfiller.com"/></a></div><div id="main"><div id="bodycolumn"><div class="yahbar"><div class="yahprev"><a href="jaxboverview.xhtml">Prev</a></div><h3 class="yahhere"><a href="#" onclick="return navToggle();">JAXB Guide / Mapping Classes</a></h3><div class="yahnext"><a href="readingandwriting.xhtml">Next</a></div></div><h1 id="sec_mappingclasses" class="multipageTitle"><a name="mappingclasses">Mapping Classes</a></h1><div class="subSecRow2" id="sec_schemafirst"><div class="subSecHead" id="sechd_schemafirst"><a name="schemafirst">Schema first?</a></div><div class="subSecContent" id="seccnt_schemafirst"><p class="subSecExplanation"> In case you don't already have a schema, you need to ask yourself whether you want to <em>write the XML Schema first</em> and generate classes for it using <a href="#" id="tl-d2e494" class="dottedTooltip" onclick="return tlClick('tl-d2e494','pp-d2e332');" onmouseover="return tlOver('tl-d2e494','pp-d2e332');" onmouseout="return tlOut('tl-d2e494','pp-d2e332');">xjc</a>, or whether you want to <em>write the Java classes with JAXB annotations</em>, and optionally generate the XML Schema later using <a href="#" id="tl-d2e499" class="dottedTooltip" onclick="return tlClick('tl-d2e499','pp-d2e358');" onmouseover="return tlOver('tl-d2e499','pp-d2e358');" onmouseout="return tlOut('tl-d2e499','pp-d2e358');">schemagen</a>.</p><ul class="subSecList"><li>If you just want to serialize some data in XML, and don't really care too much what the XML looks like, write the definitions in Java. It's usually more convenient and the resulting Java classes are simpler and easier to use. This is called <em>bottom-up design</em>.</li><li>If you care about the XML Schema (e.g. you want to publish it), write the Schema first and use <span class="idf">xjc</span>. This makes it a lot easier to have a good XML schema. This is called <em>top-down design</em></li></ul></div></div><div class="subSecRow1" id="sec_xjc"><div class="subSecHead" id="sechd_xjc"><a name="xjc">xjc</a></div><div class="subSecContent" id="seccnt_xjc"><p class="subSecExplanation"> If you have a schema, you can use <a href="#" id="tl-d2e527" class="dottedTooltip" onclick="return tlClick('tl-d2e527','pp-d2e332');" onmouseover="return tlOver('tl-d2e527','pp-d2e332');" onmouseout="return tlOut('tl-d2e527','pp-d2e332');">xjc</a> on the command line to get the classes that you need. <span class="idf">xjc</span> is included with both JDK6 and the JAXB reference implementation. Usage:</p><pre class="subSecConsole">&gt; xjc -d <a href="#" id="tl-d2e535" class="dottedTooltip" onclick="return tlClick('tl-d2e535','pp-d2e539');" onmouseover="return tlOver('tl-d2e535','pp-d2e539');" onmouseout="return tlOut('tl-d2e535','pp-d2e539');">target-directory</a> -p <a href="#" id="tl-d2e542" class="dottedTooltip" onclick="return tlClick('tl-d2e542','pp-d2e546');" onmouseover="return tlOver('tl-d2e542','pp-d2e546');" onmouseout="return tlOut('tl-d2e542','pp-d2e546');">your.package.name</a> <a href="#" id="tl-d2e555" class="dottedTooltip" onclick="return tlClick('tl-d2e555','pp-d2e559');" onmouseover="return tlOver('tl-d2e555','pp-d2e559');" onmouseout="return tlOut('tl-d2e555','pp-d2e559');">path-to-schema</a></pre></div></div><div class="subSecRow2" id="sec_propertybased"><div class="subSecHead" id="sechd_propertybased"><a name="propertybased">Property-based Beans</a><br/>(<a href="#" id="tl-d2e563" class="dottedTooltip" onclick="return tlClick('tl-d2e563','pp-d2e568');" onmouseover="return tlOver('tl-d2e563','pp-d2e568');" onmouseout="return tlOut('tl-d2e563','pp-d2e568');">more</a>)
		</div><div class="subSecContent" id="seccnt_propertybased"><pre class="subSecCode"><code>package com.jarfiller.example;
import java.util.*;
import <a href="http://java.sun.com/javase/6/docs/api/javax/xml/bind/annotation/XmlRootElement.html" class="javadoc">javax.xml.bind.annotation.XmlRootElement</a>;

<em><a href="http://java.sun.com/javase/6/docs/api/javax/xml/bind/annotation/XmlRootElement.html" class="javadoc">@XmlRootElement</a></em>
public class MovieLibrary {                      <span class="cmt">// root element</span>
  private List&lt;Movie&gt; collection;

  public MovieLibrary() {                        <span class="cmt">// <em>no-arg constructor required</em> (<a href="#" id="tl-d2e614" class="dottedTooltip" onclick="return tlClick('tl-d2e614','pp-d2e614');" onmouseover="return tlOver('tl-d2e614','pp-d2e614');" onmouseout="return tlOut('tl-d2e614','pp-d2e614');">more</a>)</span>
  }

  public MovieLibrary(List&lt;Movie&gt; collection) {  <span class="cmt">// convenience constructor</span>
    this.collection = collection;
  }

  public void setCollection(List&lt;Movie&gt; collection) {
    this.collection = collection;
  }
  public List&lt;Movie&gt; getCollection() {
    return collection;
  }
}

public class Movie {                             <span class="cmt">// normal element - <em>annotations are optional</em></span>
  private String title;
  private int releaseYear;

  public Movie() {                               <span class="cmt">// <em>no-arg constructor required</em> (<a href="#" id="tl-d2e685" class="dottedTooltip" onclick="return tlClick('tl-d2e685','pp-d2e614');" onmouseover="return tlOver('tl-d2e685','pp-d2e614');" onmouseout="return tlOut('tl-d2e685','pp-d2e614');">more</a>)</span>
  }

  public Movie(String title, int releaseYear) {
    this.title = title;
    this.releaseYear = releaseYear;
  }

  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }

  public int getReleaseYear() {
    return releaseYear;
  }
  public void setReleaseYear(int releaseYear) {
    this.releaseYear = releaseYear;
  }
}
</code></pre></div></div><div class="subSecRow1" id="sec_fieldbased"><div class="subSecHead" id="sechd_fieldbased"><a name="fieldbased">Field-based beans</a><br/>(<a href="#" id="tl-d2e753" class="dottedTooltip" onclick="return tlClick('tl-d2e753','pp-d2e758');" onmouseover="return tlOver('tl-d2e753','pp-d2e758');" onmouseout="return tlOut('tl-d2e753','pp-d2e758');">more</a>)
		</div><div class="subSecContent" id="seccnt_fieldbased"><p class="subSecExplanation">Shorter alternative: just <em>use public fields</em>. The following classes would create exactly the same XML as the property-based bean above:</p><pre class="subSecCode"><code><a href="http://java.sun.com/javase/6/docs/api/javax/xml/bind/annotation/XmlRootElement.html" class="javadoc">@XmlRootElement</a>
public class MovieLibrary {
  public List&lt;Movie&gt; collection;
}

public class Movie {
  public String title;
  public int releaseYear;
}
</code></pre></div></div><div class="subSecRow2" id="sec_exampleschema"><div class="subSecHead" id="sechd_exampleschema"><a name="exampleschema">XML Schema</a></div><div class="subSecContent" id="seccnt_exampleschema"><p class="subSecExplanation">This is the <a href="#" id="tl-d2e812" class="dottedTooltip" onclick="return tpcClick('tl-d2e812','pp-d2e20');" onmouseover="return tpcOver('tl-d2e812','pp-d2e20');" onmouseout="return tpcOut('tl-d2e812','pp-d2e20');">XML Schema</a> that the <em><a href="#" id="tl-d2e816" class="dottedTooltip" onclick="return tlClick('tl-d2e816','pp-d2e358');" onmouseover="return tlOver('tl-d2e816','pp-d2e358');" onmouseout="return tlOut('tl-d2e816','pp-d2e358');">schemagen</a> tool will create</em>, given the <span class="idf">MovieLibrary</span> class:</p><pre class="subSecCode"><code>&lt;xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;

  &lt;xs:complexType name="movieLibrary"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="collection" type="movie" nillable="true"
                     minOccurs="0" maxOccurs="unbounded"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="movie"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="title" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="releaseYear" type="xs:int"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;
</code></pre><p class="subSecExplanation">Be careful with <span class="idf">schemagen</span>-generated schemas though: as in this example, they do not declare a top-level element. You may need to add it yourself:</p><pre class="subSecCode"><code>&lt;xs:element name="movieLibrary" type="movieLibrary"/&gt;
</code></pre></div></div><div class="yahbar"><div class="yahprev"><a href="jaxboverview.xhtml">Prev<br/><span>Overview</span></a></div><div class="yahhere"><a href="#" onclick="return navToggle();">JAXB Guide / Mapping Classes</a><br/><a href="/guide/jaxb/"><span>Single Page Mode</span></a>, <a href="#" onclick="return navToggle();"><span>Show Table of Content</span></a></div><div class="yahnext"><a href="readingandwriting.xhtml">Next<br/><span>Reading and Writing XML</span></a></div></div></div><div id="sidecolumn">
  	<div><h3>Useful Links</h3><div class="sidecolumnSubTitleLine"/>
  			<a href="http://en.wikipedia.org/wiki/Java_Architecture_for_XML_Binding">JAXB on Wikipedia</a><br/>
  			<a href="https://jaxb.dev.java.net/">JAXB Reference Implementation (Metro)</a><br/>
  			<a href="http://jcp.org/en/jsr/detail?id=222">JSR-222 (JAXB)</a><br/>
  			<a href="http://java.sun.com/javase/6/docs/api/javax/xml/bind/package-summary.html">Java 6 API javax.xml.bind</a>
  		</div>
  </div></div></div><div id="footer"><div id="footer-content"><div id="footer-left"><div class="footerLine"><a href="/">Home</a> - <a href="/about">About Jarfiller</a> - <a href="/imprint.xhtml">Imprint</a></div><div class="footerLine">Please send feedback and corrections to <a href="mailto:tim@tjansen.de">tim@<span style="display: none">got you</span>tjansen.de</a>.</div><div class="footerLine"><a href="http://www.twitter.com/timjansen">Follow</a> me on Twitter.</div><div class="copyrightLine">© 2010 Tim Jansen; content licensed under <a href="http://creativecommons.org/licenses/by/3.0/us/">cc-by</a>; example source code is public domain
				</div></div><div id="footer-right"><a rel="license" href="http://creativecommons.org/licenses/by/3.0/us/"><img alt="Creative Commons License" style="border-width:0" src="../../images/ext/cc-by-88x31.png"/></a></div></div></div><div id="navbar" onclick="return navToggle();" onmouseover="document.getElementById('navbar').className='mouseover';" onmouseout="document.getElementById('navbar').className='';"/><div id="navcontainer"><div id="navlinks"><div id="navclosebar"><a href="#" onclick="return navClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="navpositionbar" class="navpositionbar"/><h2 id="navtitle">JAXB Guide</h2><a id="nav_jaxboverview" class="navseclink" href="jaxboverview.xhtml#jaxboverview">Overview</a><a id="nav_intro" class="navsublink" href="jaxboverview.xhtml#intro">Intro</a><a id="nav_usecases" class="navsublink" href="jaxboverview.xhtml#usecases">When should JAXB be used?</a><a id="nav_requirements" class="navsublink" href="jaxboverview.xhtml#requirements">What do you need for JAXB?</a><a id="nav_mappingclasses" class="navseclink" href="#mappingclasses" onclick="if (event.button == 0) return goTo('#mappingclasses', true); else return true;">Mapping Classes</a><a id="nav_schemafirst" class="navsublink" href="#schemafirst" onclick="if (event.button == 0) return goTo('#schemafirst', true); else return true;">Schema first?</a><a id="nav_xjc" class="navsublink" href="#xjc" onclick="if (event.button == 0) return goTo('#xjc', true); else return true;">xjc</a><a id="nav_propertybased" class="navsublink" href="#propertybased" onclick="if (event.button == 0) return goTo('#propertybased', true); else return true;">Property-based Beans</a><a id="nav_fieldbased" class="navsublink" href="#fieldbased" onclick="if (event.button == 0) return goTo('#fieldbased', true); else return true;">Field-based beans</a><a id="nav_exampleschema" class="navsublink" href="#exampleschema" onclick="if (event.button == 0) return goTo('#exampleschema', true); else return true;">XML Schema</a><a id="nav_readingandwriting" class="navseclink" href="readingandwriting.xhtml#readingandwriting">Reading and Writing XML</a><a id="nav_writingxml" class="navsublink" href="readingandwriting.xhtml#writingxml">Writing XML</a><a id="nav_writingxmlresult" class="navsublink" href="readingandwriting.xhtml#writingxmlresult">Result</a><a id="nav_readingxml" class="navsublink" href="readingandwriting.xhtml#readingxml">Reading XML</a><a id="nav_supportedtypes" class="navsublink" href="readingandwriting.xhtml#supportedtypes">Supported Types</a><span class="navseclink">How to... Mapping</span><a id="nav_namespaces" class="navsublink" href="namespaces.xhtml#namespaces">How to Use XML Namespaces</a><a id="nav_attributes" class="navsublink" href="attributes.xhtml#attributes">How to Declare XML Attributes</a><a id="nav_requiredelements" class="navsublink" href="requiredelements.xhtml#requiredelements">How to Require XML Elements</a><a id="nav_elementnames" class="navsublink" href="elementnames.xhtml#elementnames">How to Specify a Different Name for an Element</a><a id="nav_preventingserialization" class="navsublink" href="preventingserialization.xhtml#preventingserialization">How to Prevent Serialization of Properties or Fields</a><a id="nav_propertyorder" class="navsublink" href="propertyorder.xhtml#propertyorder">How to Specify an Order for Properties/Fields</a><a id="nav_choice" class="navsublink" href="choice.xhtml#choice">How to Have Mixed XML Elements in a Single List (Choice)</a><a id="nav_simpletypes" class="navsublink" href="simpletypes.xhtml#simpletypes">How to Implement a Simple Type</a><a id="nav_xmladapter" class="navsublink" href="xmladapter.xhtml#xmladapter">How to Map Java Types to XML</a><a id="nav_jaxbelement" class="navsublink" href="jaxbelement.xhtml#jaxbelement">How to use JAXBElement</a><span class="navseclink">How to... Serialization</span><a id="nav_jaxbcontext" class="navsublink" href="jaxbcontext.xhtml#jaxbcontext">How to Use JAXBContext</a><a id="nav_customizedserialization" class="navsublink" href="customizedserialization.xhtml#customizedserialization">How to Customize the Serialization / use JAXB 2.0</a><a id="nav_schemavalidation" class="navsublink" href="schemavalidation.xhtml#schemavalidation">How to Validate Against an XML Schema</a><a id="nav_prettyprinting" class="navsublink" href="prettyprinting.xhtml#prettyprinting">How to Create Nicely Formatted XML</a><a id="nav_xmlfragments" class="navsublink" href="xmlfragments.xhtml#xmlfragments">How to Create XML Fragments</a><a id="nav_encoding" class="navsublink" href="encoding.xhtml#encoding">How to Change the Charset Encoding of the XML Output</a><a id="nav_consumer" class="navsublink" href="consumer.xhtml#consumer">How to Send the Content Tree to a DOM/SAX Consumer</a><a id="nav_domtree" class="navsublink" href="domtree.xhtml#domtree">How to Read from a DOM Tree</a><a id="nav_stringreading" class="navsublink" href="stringreading.xhtml#stringreading">How to Read from a String</a><a id="nav_stringwriting" class="navsublink" href="stringwriting.xhtml#stringwriting">How to Serialize XML Into a String</a><a id="nav_xpath" class="navsublink" href="xpath.xhtml#xpath">How to Use XPath on JAXB Content Trees</a><a id="nav_xslt" class="navsublink" href="xslt.xhtml#xslt">How to Use JAXB with XSLT</a><a id="nav_performance" class="navsublink" href="performance.xhtml#performance">How to Improve Performance</a><a id="nav_multithreading" class="navsublink" href="multithreading.xhtml#multithreading">How to Write Thread-safe Code with JAXB</a></div></div><div id="popups"><div id="pp-d2e568" class="tooltip">JAXB uses plain Java beans to represent the XML document. Data can be either stored in properties, as shown in this section, or in public fields.<br/>In order to map the bean onto a specific XML schema, it supports a large number of annotations to give you full control over the XML that will be generated. However, if the exact XML layout is a concern for you (e.g. whether a field will be stored as an attribute or as an element), you are usually better off writing the XML Schema first and use <span class="idf">xjc</span>.</div><div id="pp-d2e614" class="tooltip">Every serializable element needs a <span class="idf">public</span> constructor without arguments that JAXB can use to create new instances. You are free to add additional constructors, of course.</div><div id="pp-d2e758" class="tooltip">In JAXB, you can either use bean properties or public fields for you data. You can also mix both of them. The created XML will always be the same.<br/> You can override the automatic creation of elements for both types of members using the <span class="idf">@XmlAccessorType</span> annotation.</div><div id="pp-d2e539" class="tooltip">The path of the directory to store the generated source in.</div><div id="pp-d2e546" class="tooltip">The package name for the Java code to generate. If you don't specify the <span class="idf">-p</span> option, <span class="idf">xjc</span> will try to derive a package name from the XML Schema's namespace URI.</div><div id="pp-d2e559" class="tooltip">The path to the XML schema you want to compile. You can specify more than one schema. If this is a directory, all schemas in the directory will be compiled.</div><div id="pp-d2e20" class="topic"><div class="topicPara"><span class="topicHead">XML Schema</span></div><div class="topicPara">An XML Schema is used to describe the structure of a XML document. The schema itself is a also XML document,
  		called XML Schema Definition (XSD).</div><div class="topicPara"><span class="topicLinkHead">Homepage: </span><a href="http://www.w3.org/XML/Schema">XML Schema Homepage (W3C)</a><br/><span class="topicLinkHead">Wikipedia: </span><a href="http://en.wikipedia.org/wiki/XML_Schema_(W3C)">XML Schema (W3C)</a></div><div class="topicPara"><span class="topicLinkHead">Specification: </span><a href="http://www.w3.org/TR/xmlschema-0/">Part 0</a>, <a href="http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/structures.html">Part 1</a>, <a href="http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/datatypes.html">Part 2</a></div></div><div id="ttCloseBar" class="closeBar"><a href="#" onclick="return tlClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="topicCloseBar" class="closeBar"><a href="#" onclick="return tpcClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div></div></body></html>