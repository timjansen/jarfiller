<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:page="http://tjansen.de/refPage" xmlns:i="http://tjansen.de/internal"><head><title>Overview - JMS Guide</title><meta http-equiv="X-UA-Compatible" content="chrome=1"/><meta http-equiv="content-language" content="en"/><link rel="shortcut icon" href="../../images/favicon.png" type="image/png"/><link rel="stylesheet" type="text/css" href="../../style/style.css"/><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6791190-2']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script><script type="text/javascript" src="../../js/all.js"/></head><body id="body"><div id="visibleContent"><div id="top"><a href="/"><img src="../../images/titlebar.png" alt="Jarfiller.com"/></a></div><div id="main"><div id="bodycolumn"><div class="yahbar"><h3 class="yahhere"><a href="#" onclick="return navToggle();">JMS Guide / Overview</a></h3><div class="yahnext"><a href="standaloneclient.xhtml">Next</a></div></div><h1 id="sec_jmsoverview" class="multipageTitle"><a name="jmsoverview">Overview</a></h1><div class="subSecRow1" id="sec_intro"><div class="subSecHead" id="sechd_intro"><a name="intro">Intro</a></div><div class="subSecContent" id="seccnt_intro"><p class="subSecExplanation"> The Java Message Service (JMS) allows Java applications to <em>send and receive messages asynchronously</em>. It can be used for <em>communication between server applications</em>, but also within an application to postpone tasks or to distribute them to components.<br/> In order to use JMS, you usually need some sort of messaging provider. This can be a stand-alone server, such as <a href="http://activemq.apache.org/">ActiveMQ</a> or <a href="http://www-01.ibm.com/software/integration/wmq/">Websphere MQ</a>, or a messaging implementation that is part of an application server like the <a href="http://www.jboss.org/jbossas/">JBoss Application Server</a>. The latter is often the easiest solution, as long as sender and receiver both run inside the same application server. </p></div></div><div class="subSecRow2" id="sec_usecases"><div class="subSecHead" id="sechd_usecases"><a name="usecases">Use Cases</a></div><div class="subSecContent" id="seccnt_usecases"><h2 class="subSecSummaryNoClick">When should JMS be used?</h2><p class="subSecExplanation">Use JMS when..</p><ul class="subSecList"><li>you want to <em>exchange messages reliably</em> between servers in the same network (<a href="#" id="tl-d18684e268" class="dottedTooltip" onclick="return tlClick('tl-d18684e268','pp-d18684e268');" onmouseover="return tlOver('tl-d18684e268','pp-d18684e268');" onmouseout="return tlOut('tl-d18684e268','pp-d18684e268');">more</a>)</li><li>or, inside an application server, you want to <em>split up work into smaller chunks</em> (<a href="#" id="tl-d18684e276" class="dottedTooltip" onclick="return tlClick('tl-d18684e276','pp-d18684e276');" onmouseover="return tlOver('tl-d18684e276','pp-d18684e276');" onmouseout="return tlOut('tl-d18684e276','pp-d18684e276');">more</a>)</li><li>there is a direct connection between the message server and its clients (no firewalls etc)</li></ul><h4 class="subSecMiniHeadline">Alternatives</h4><p class="subSecExplanation"> The main alternative to JMS are <em><a href="http://en.wikipedia.org/wiki/Remote_procedure_call">RPC</a> systems</em> that allow you to invoke functions on remote systems. For <a href="http://en.wikipedia.org/wiki/Client-server">client/server</a> models they are almost always easier to use. On the other hand, making a message exchange reliable can be quite a challenge with RPCs. </p><ul class="subSecList"><li><a href="http://en.wikipedia.org/wiki/SOAP_(protocol)">SOAP</a> with <a href="http://en.wikipedia.org/wiki/JAX-WS">JAX-WS</a> is the right choice when you need to get through web proxies and firewalls, or when interoperability with non-Java systems is important.</li><li><a href="http://en.wikipedia.org/wiki/Java_remote_method_invocation">RMI</a>, Java's built-in RPC mechanism, will get you started quickly and requires little initial effort. It works with Java endpoints only though, and there are some serious problems you need to consider (<a href="#" id="tl-d18684e311" class="dottedTooltip" onclick="return tlClick('tl-d18684e311','pp-d18684e311');" onmouseover="return tlOver('tl-d18684e311','pp-d18684e311');" onmouseout="return tlOut('tl-d18684e311','pp-d18684e311');">more</a>).</li><li><a href="http://en.wikipedia.org/wiki/Corba">CORBA</a>, either via Java's CORBA APIs or with RMI-IIOP, is old and complicated. Don't use unless you are required to.</li></ul></div></div><div class="subSecRow1" id="sec_requirements"><div class="subSecHead" id="sechd_requirements"><a name="requirements">Requirements</a></div><div class="subSecContent" id="seccnt_requirements"><h2 class="subSecSummaryNoClick">What do you need for JMS?</h2><p class="subSecExplanation">For JMS you need...</p><ul class="subSecList"><li><em>a messaging server</em>, for example <a href="http://activemq.apache.org/">ActiveMQ</a> or <a href="http://www-01.ibm.com/software/integration/wmq/">Websphere MQ</a>. Or a messaging engine integrated into an application server such as <a href="http://www.jboss.org/jbossas/">JBoss</a>'. There are also some peer-to-peer JMS system, e.g. <a href="http://sourceforge.net/projects/mantaray/">Mantaray</a>.</li><li>a <em>JMS provider</em> for your server (basically a driver for your server)</li></ul></div></div><div class="subSecRow2" id="sec_destinations"><div class="subSecHead" id="sechd_destinations"><a name="destinations">Destinations</a></div><div class="subSecContent" id="seccnt_destinations"><p class="subSecExplanation"><em>Destinations</em> are the things you send messages to and receive messages from. There are two kinds of destination defined in the JMS standard:</p><ul class="subSecList"><li><em>Queues</em> allow only one receiver per message. If the message is read and acknowledged, it will be removed from the queue.</li><li><em>Topics</em> allow several subscribers to receive messages. A message stays in the <span class="idf">Topic</span> until all subscribers read and acknowledged it (<a href="#" id="tl-d18684e387" class="dottedTooltip" onclick="return tlClick('tl-d18684e387','pp-d18684e387');" onmouseover="return tlOver('tl-d18684e387','pp-d18684e387');" onmouseout="return tlOut('tl-d18684e387','pp-d18684e387');">more</a>).</li></ul><p class="subSecExplanation"> Both topics and queues have in common that there can be several senders, and that messages will always be received in the order they have been sent. </p></div></div><div class="yahbar"><div class="yahhere"><a href="#" onclick="return navToggle();">JMS Guide / Overview</a><br/><a href="/guide/jms/"><span>Single Page Mode</span></a>, <a href="#" onclick="return navToggle();"><span>Show Table of Content</span></a></div><div class="yahnext"><a href="standaloneclient.xhtml">Next<br/><span>Sending and Receiving Messages (Standalone Client)</span></a></div></div></div><div id="sidecolumn">
    	<div><h3>Useful Links</h3><div class="sidecolumnSubTitleLine"/>
  			<a href="http://java.sun.com/products/jms/">JMS Homepage</a><br/>
  			<a href="http://en.wikipedia.org/wiki/Java_Message_Service">JMS on Wikipedia</a><br/>
  			<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/package-summary.html">javax.jms API Docs</a><br/>
  			<a href="http://java.sun.com/products/jms/docs.html">JMS Specification</a><br/>
  		</div>
  </div></div></div><div id="footer"><div id="footer-content"><div id="footer-left"><div class="footerLine"><a href="/">Home</a> - <a href="/about">About Jarfiller</a> - <a href="/imprint.xhtml">Imprint</a></div><div class="footerLine">Please send feedback and corrections to <a href="mailto:tim@tjansen.de">tim@<span style="display: none">got you</span>tjansen.de</a>.</div><div class="footerLine"><a href="http://www.twitter.com/timjansen">Follow</a> me on Twitter.</div><div class="copyrightLine">Â© 2010 Tim Jansen; content licensed under <a href="http://creativecommons.org/licenses/by/3.0/us/">cc-by</a>; example source code is public domain
				</div></div><div id="footer-right"><a rel="license" href="http://creativecommons.org/licenses/by/3.0/us/"><img alt="Creative Commons License" style="border-width:0" src="../../images/ext/cc-by-88x31.png"/></a></div></div></div><div id="navbar" onclick="return navToggle();" onmouseover="document.getElementById('navbar').className='mouseover';" onmouseout="document.getElementById('navbar').className='';"/><div id="navcontainer"><div id="navlinks"><div id="navclosebar"><a href="#" onclick="return navClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="navpositionbar" class="navpositionbar"/><h2 id="navtitle">JMS Guide</h2><a id="nav_jmsoverview" class="navseclink" href="#jmsoverview" onclick="if (event.button == 0) return goTo('#jmsoverview', true); else return true;">Overview</a><a id="nav_intro" class="navsublink" href="#intro" onclick="if (event.button == 0) return goTo('#intro', true); else return true;">Intro</a><a id="nav_usecases" class="navsublink" href="#usecases" onclick="if (event.button == 0) return goTo('#usecases', true); else return true;">When should JMS be used?</a><a id="nav_requirements" class="navsublink" href="#requirements" onclick="if (event.button == 0) return goTo('#requirements', true); else return true;">What do you need for JMS?</a><a id="nav_destinations" class="navsublink" href="#destinations" onclick="if (event.button == 0) return goTo('#destinations', true); else return true;">Destinations</a><a id="nav_standaloneclient" class="navseclink" href="standaloneclient.xhtml#standaloneclient">Sending and Receiving Messages (Standalone Client)</a><a id="nav_sending" class="navsublink" href="standaloneclient.xhtml#sending">Sending a message</a><a id="nav_polling" class="navsublink" href="standaloneclient.xhtml#polling">Polling for messages</a><a id="nav_messagelistener" class="navsublink" href="standaloneclient.xhtml#messagelistener">Using a MessageListener</a><a id="nav_jndi" class="navsublink" href="standaloneclient.xhtml#jndi">Getting the ConnectionFactory via JNDI</a><a id="nav_activemqsetup" class="navsublink" href="standaloneclient.xhtml#activemqsetup">How to set up ActiveMQ</a><a id="nav_webspheremqsetup" class="navsublink" href="standaloneclient.xhtml#webspheremqsetup">How to set up Websphere MQ</a><a id="nav_sendingreceivingejb3" class="navseclink" href="sendingreceivingejb3.xhtml#sendingreceivingejb3">Sending and Receiving Messages in EJB 3 Applications</a><a id="nav_sendingejb3" class="navsublink" href="sendingreceivingejb3.xhtml#sendingejb3">Sending Messages</a><a id="nav_receivingejb3" class="navsublink" href="sendingreceivingejb3.xhtml#receivingejb3">Receiving messages</a><a id="nav_jbosssetup" class="navsublink" href="sendingreceivingejb3.xhtml#jbosssetup">How to set up JBoss 5.x</a><a id="nav_topics" class="navseclink" href="topics.xhtml#topics">Using Topics</a><a id="nav_sendingtopics" class="navsublink" href="topics.xhtml#sendingtopics">Sending Topic Messages</a><a id="nav_receivingtopics" class="navsublink" href="topics.xhtml#receivingtopics">Receiving Topic Messages</a><a id="nav_durablesubscription" class="navsublink" href="topics.xhtml#durablesubscription">Durable Subscription</a><a id="nav_endingsubscription" class="navsublink" href="topics.xhtml#endingsubscription">Cancelling a subscription</a><a id="nav_messagetypes" class="navseclink" href="messagetypes.xhtml#messagetypes">Message Types</a><a id="nav_textmessages" class="navsublink" href="messagetypes.xhtml#textmessages">TextMessage</a><a id="nav_mapmessages" class="navsublink" href="messagetypes.xhtml#mapmessages">MapMessage</a><a id="nav_streammessages" class="navsublink" href="messagetypes.xhtml#streammessages">StreamMessage</a><a id="nav_objectmessages" class="navsublink" href="messagetypes.xhtml#objectmessages">ObjectMessage</a><a id="nav_bytesmessages" class="navsublink" href="messagetypes.xhtml#bytesmessages">BytesMessage</a><a id="nav_emptymessages" class="navsublink" href="messagetypes.xhtml#emptymessages">Empty Messages</a><span class="navseclink">How to...</span><a id="nav_messageheaders" class="navsublink" href="messageheaders.xhtml#messageheaders">How to use Message Headers</a><a id="nav_messageproperties" class="navsublink" href="messageproperties.xhtml#messageproperties">How to read and set Message Properties</a><a id="nav_selectors" class="navsublink" href="selectors.xhtml#selectors">How to use Message Selectors to filter messages</a><a id="nav_xml" class="navsublink" href="xml.xhtml#xml">How to send and receive XML messages with DOM or JAXB</a><a id="nav_achknowledgement" class="navsublink" href="achknowledgement.xhtml#achknowledgement">How to control acknowledgement</a><a id="nav_browsing" class="navsublink" href="browsing.xhtml#browsing">How to browse the messages in a queue</a><a id="nav_authentication" class="navsublink" href="authentication.xhtml#authentication">How to authenticate a connection</a><a id="nav_temporaryqueues" class="navsublink" href="temporaryqueues.xhtml#temporaryqueues">How to Create Temporary Queues or Topics</a><a id="nav_requestresponse" class="navsublink" href="requestresponse.xhtml#requestresponse">How to send a response to a message (Request/Reply)</a><a id="nav_deliveryoptions" class="navsublink" href="deliveryoptions.xhtml#deliveryoptions">How to Control Message Delivery (Delivery Mode, Time-to-live and Priority)</a><a id="nav_activationproperties" class="navsublink" href="activationproperties.xhtml#activationproperties">How to Configure a Message-Driven Bean (Activation Properties, Durable Subscriptions)</a><a id="nav_concurrency" class="navsublink" href="concurrency.xhtml#concurrency">How to use JMS in multi-threaded applications</a><a id="nav_classes10" class="navsublink" href="classes10.xhtml#classes10">How to Use QueueConnectionFactory, QueueConnection, QueueSession...</a><a id="nav_andnow" class="navseclink" href="andnow.xhtml#andnow">And now...?</a><a id="nav_nextsteps" class="navsublink" href="andnow.xhtml#nextsteps">Next Steps</a></div></div><div id="popups"><div id="pp-d18684e268" class="tooltip">The main advantage of JMS over technologies such as RMI, CORBA and Web Services is that JMS is designed for reliability and can be integrated into transactions. This makes it the technology of choice for many server applications. Using it in clients is not common though, as many JMS implementations don't work well through firewalls, and because complex client/server protocols are more difficult to implement using JMS. JMS works best when your messages are very simple.</div><div id="pp-d18684e276" class="tooltip">Many EJB application servers ship with built-in JMS messaging support. In EJB application servers, a task can not run indefinitely. If an operation runs too long, the server assumes that it hangs and will try to abort it. You can avoid this problem by splitting your work into smaller pieces and send yourself a message for each piece of work. This will reduce the running time of the tasks, and possibly it also helps you to parallelize your workload, as several messages can then be processed simultaneously.</div><div id="pp-d18684e311" class="tooltip">RMI's protocol is not very firewall-friendly, and if you can't be sure that client and server run the same version of your application, RMI can be quite complicated. Also, RMI is notoriously difficult to debug. Unlike SOAP, whose text-based messages can be easily viewed with a plethora of tools and whose HTTP transport can checked with every web browser, debugging RMI is mostly trial and error.</div><div id="pp-d18684e387" class="tooltip">There are two kinds of subscribers for topics:<br/> <em>Nondurable subscribers</em> only get those messages that are published while the subscriber is keeping its connection open and stays subscribed.<br/><em>Durable subscribers</em> will also receive messages sent while they were offline.<br/><br/><strong class="warn">Note:</strong> if you send a message to a Topic without any subscribers, it will be discarded immediately.</div><div id="ttCloseBar" class="closeBar"><a href="#" onclick="return tlClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="topicCloseBar" class="closeBar"><a href="#" onclick="return tpcClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div></div></body></html>