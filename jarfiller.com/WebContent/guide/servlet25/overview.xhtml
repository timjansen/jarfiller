<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:page="http://tjansen.de/refPage" xmlns:i="http://tjansen.de/internal"><head><title>Overview - Servlet 2.5 Guide</title><meta http-equiv="X-UA-Compatible" content="chrome=1"/><meta http-equiv="content-language" content="en"/><link rel="shortcut icon" href="../../images/favicon.png" type="image/png"/><link rel="stylesheet" type="text/css" href="../../style/style.css"/><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6791190-2']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script><script type="text/javascript" src="../../js/all.js"/></head><body id="body"><div id="visibleContent"><div id="top"><a href="/"><img src="../../images/titlebar.png" alt="Jarfiller.com"/></a></div><div id="main"><div id="bodycolumn"><div class="yahbar"><h3 class="yahhere"><a href="#" onclick="return navToggle();">Servlet 2.5 Guide / Overview</a></h3><div class="yahnext"><a href="servlets.xhtml">Next</a></div></div><h1 id="sec_overview" class="multipageTitle"><a name="overview">Overview</a></h1><div class="subSecRow1" id="sec_intro"><div class="subSecHead" id="sechd_intro"><a name="intro">Intro</a></div><div class="subSecContent" id="seccnt_intro"><p class="subSecExplanation"> The Java Servlet API is a low-level API to <em>extend a web server to generate dynamic content</em>. The API's core is the <a href="http://java.sun.com/javaee/5/docs/api/javax/servlet/Servlet.html" class="javadoc">Servlet</a> interface. Classes implementing this interface can <em>receive the client's HTTP request and generate the response</em>. </p><p class="subSecExplanation"> Practically <em>all Java web frameworks are built on the Servlet API</em>. This makes it important to know the basics even when you will never write a servlet. </p><p class="subSecExplanation"> A collection of Servlets, Filters, <a href="#" id="tl-d22757e1327" class="dottedTooltip" onclick="return tpcClick('tl-d22757e1327','pp-d22757e144');" onmouseover="return tpcOver('tl-d22757e1327','pp-d22757e144');" onmouseout="return tpcOut('tl-d22757e1327','pp-d22757e144');">JSPs</a> and static web content that is bundled together in a single directory is called a <em>web application</em>. Web application are usually distributed and deployed in <em>WAR archives</em>. A web server that supports Java web applications is also called <em>web container</em>. </p><p class="subSecExplanation"> The Servlet API has two layers, a generic layer and a HTTP-specific layer. The generic part can also be used for other protocols such as FTP, SIP and SMTP. Non-HTTP servlets are not described in this document. </p></div></div><div class="subSecRow2" id="sec_usecases"><div class="subSecHead" id="sechd_usecases"><a name="usecases">Use cases</a></div><div class="subSecContent" id="seccnt_usecases"><h2 class="subSecSummaryNoClick">When should you write a Servlet?</h2><p class="subSecExplanation">Practically <em>all Java Web APIs are built on top of the Servlet API</em>. Whenever you write a web application for Java, you <em>need at least basic knowledge of the API</em>. However, it is <em>rarely necessary to implement a <a href="http://java.sun.com/javaee/5/docs/api/javax/servlet/Servlet.html" class="javadoc">Servlet</a></em> directly. <br/> Write a Servlet when...</p><ul class="subSecList"><li>you serve <em>document types not supported</em> by frameworks, like images and other binaries</li><li>you need <em>full control</em> over the response, for example to use your own web framework</li><li>you need to work on the <em>HTTP level</em>, for example for writing a <a href="http://en.wikipedia.org/wiki/Proxy_server">proxy</a>.</li></ul><h4 class="subSecMiniHeadline">Alternatives</h4><p class="subSecExplanation">Here are the most common alternatives for pure servlet development. All of them are based on the Servlet API:</p><ul class="subSecList"><li><a href="#" id="tl-d22757e1402" class="dottedTooltip" onclick="return tpcClick('tl-d22757e1402','pp-d22757e144');" onmouseover="return tpcOver('tl-d22757e1402','pp-d22757e144');" onmouseout="return tpcOut('tl-d22757e1402','pp-d22757e144');">JSP</a> are a powerful, Java-centric template system that also allows you to mix HTML with Java code (<a href="#" id="tl-d22757e1405" class="dottedTooltip" onclick="return tlClick('tl-d22757e1405','pp-d22757e1405');" onmouseover="return tlOver('tl-d22757e1405','pp-d22757e1405');" onmouseout="return tlOut('tl-d22757e1405','pp-d22757e1405');">more</a>). Today they are mostly used as a template system for higher-level web application frameworks, but for simple applications <em>JSPs without additional framework can be the fastes solution</em>.</li><li><a href="#" id="tl-d22757e1415" class="dottedTooltip" onclick="return tpcClick('tl-d22757e1415','pp-d22757e217');" onmouseover="return tpcOver('tl-d22757e1415','pp-d22757e217');" onmouseout="return tpcOut('tl-d22757e1415','pp-d22757e217');">JSF</a> is Java EE's high-level web application framework, designed for <em>complex web applications</em>. It is based on the <a href="#" id="tl-d22757e1424" class="dottedTooltip" onclick="return tlClick('tl-d22757e1424','pp-d22757e1427');" onmouseover="return tlOver('tl-d22757e1424','pp-d22757e1427');" onmouseout="return tlOut('tl-d22757e1424','pp-d22757e1427');">MVC</a> pattern, offers web components and multiple output formats.</li><li><a href="#" id="tl-d22757e1432" class="dottedTooltip" onclick="return tpcClick('tl-d22757e1432','pp-d22757e257');" onmouseover="return tpcOver('tl-d22757e1432','pp-d22757e257');" onmouseout="return tpcOut('tl-d22757e1432','pp-d22757e257');">Spring</a> is a popular alternative. It is a complete application framework that also includes support for web applications, among other features. Typically it is used as a <a href="#" id="tl-d22757e1435" class="dottedTooltip" onclick="return tlClick('tl-d22757e1435','pp-d22757e1438');" onmouseover="return tlOver('tl-d22757e1435','pp-d22757e1438');" onmouseout="return tlOut('tl-d22757e1435','pp-d22757e1438');">relatively</a> light-weight alternative to EJB application servers.</li></ul><p class="subSecExplanation">This list is far from complete, and there is an almost endless number of web frameworks for Java. A few additional, notable frameworks: <a href="http://struts.apache.org">Struts</a>, <a href="http://tapestry.apache.org">Tapestry</a>, <a href="http://wicket.apache.org/">Wicket</a> and <a href="http://code.google.com/webtoolkit">GWT</a>. </p></div></div><div class="subSecRow1" id="sec_requirements"><div class="subSecHead" id="sechd_requirements"><a name="requirements">Requirements</a></div><div class="subSecContent" id="seccnt_requirements"><h2 class="subSecSummaryNoClick">What do you need for Servlets?</h2><p class="subSecExplanation"> In order to run applications written for the Java Servlet API you need a Servlet-capable web container. The most popular choice is <a href="http://tomcat.apache.org">Apache Tomcat</a>, but there are many others. Also, all EJB application server ship with a web container. </p><p class="subSecExplanation"> You web container should include the all JARs that you need to compile your web application (usually a JAR called <span class="idf">servlet-api.jar</span> or <span class="idf">javax.servlet.jar</span>). </p></div></div><div class="subSecRow2" id="sec_containers"><div class="subSecHead" id="sechd_containers"><a name="containers">Containers</a></div><div class="subSecContent" id="seccnt_containers"><h2 class="subSecSummaryNoClick">Which container supports which Servlet / JEE version?</h2><div class="subSecTableDiv"><table><tr><th/><th>Servlet 3.0</th><th>Servlet 2.5</th><th>Servlet 2.4</th></tr><tr><td>JEE Version</td><td>Java EE 6</td><td>Java EE 5</td><td>J2EE 1.3/1.4</td></tr><tr><td>Released</td><td>December 2009</td><td>September 2005</td><td>November 2003</td></tr><tr><td>in Tomcat</td><td>&gt;= 7.0 (*)</td><td>&gt;= 6.0</td><td>&gt;= 5.5</td></tr><tr><td>in Jetty</td><td>&gt;= 8.0 (*)</td><td>&gt;= 6.0</td><td>&gt;= 5.0</td></tr><tr><td>in Glassfish</td><td>&gt;= 3.0</td><td>&gt;= 1.0</td><td>&gt;= 1.0</td></tr><tr><td>in JBoss AS</td><td>&gt;= 6.0 (*)</td><td>&gt;= 4.2</td><td>&gt;= 4.0</td></tr><tr><td>in Resin</td><td>&gt;= 4.0</td><td>&gt;= 3.1</td><td>&gt;= 3.0</td></tr><tr><td>in <a href="#" id="tl-d22757e1589" class="dottedTooltip" onclick="return tlClick('tl-d22757e1589','pp-d22757e1592');" onmouseover="return tlOver('tl-d22757e1589','pp-d22757e1592');" onmouseout="return tlOut('tl-d22757e1589','pp-d22757e1592');">WAS</a></td><td>-</td><td>&gt;= 7.0</td><td>&gt;= 6.0</td></tr></table></div><p class="subSecExplanation">(*) - not stable yet </p></div></div><div class="subSecRow1" id="sec_httpintro"><div class="subSecHead" id="sechd_httpintro"><a name="httpintro">HTTP Intro</a></div><div class="subSecContent" id="seccnt_httpintro"><h2 class="subSecSummaryNoClick">Short HTTP Introduction</h2><p class="subSecExplanation">HTTP is a relatively simple, text-based protocol:</p><ul class="subSecList"><li>HTTP uses a <em>request/response pattern</em>: <ul><li>the <em>client</em>, usually a web browser, <em>sends requests</em> to the web server.</li><li>The <em>server answers with a response</em>.</li><li>The web <em>server can not send anything to the client</em> without the client initiating the connection and requesting it explicitly.</li></ul> </li><li>Every <em>request consists of a command, a path to the requested resource, a set of headers and an optional body</em> <ul><li>The only important commands are GET, POST and HEAD: <ul><li><em>GET retrieves a document</em>. Web browsers use it when you <em>visit a page</em>.</li><li><em>POST sends data</em>, and also gets a document as response. Web browser use POST when you <em>submit a form</em>.</li><li><em>HEAD simulates a GET without a body in the response</em>. This is important sometimes. For example it allows the browser to find out about a large document before downloading it.</li></ul> </li><li>The <em>path identifies the resource</em> on the server. For example, if you enter the URL "http://jarfiller.com/guide/jaxb/", the requested path is "/guide/jaxb/".</li><li><em>Headers contain additional information</em> about the request. Header values are just string key/value pairs. Usually the web server evaluates them automatically for you. Even though you can access them directly, the Servlet API provides convenience methods to handle important headers (such as cookies). Wikipedia <a href="http://en.wikipedia.org/wiki/List_of_HTTP_headers">has a complete list</a>.</li><li>The <em>POST command needs a document as body</em>. For example, if a user submits a form, the content of the fields will be sent in the body. <em>GET requests do not have a body</em>.</li><li>A request may <em>contain parameters</em>: <ul><li>GET and most other commands support <em>parameters appended to the path</em>, separated by a question mark ("?") from the rest.</li><li>POST sends <em>parameters in the body</em></li><li>parameters are sent as <em>name/value pairs</em>, which looks like this: "param1=value&amp;param2=value&amp;param3=value"... (<a href="#" id="tl-d22757e1733" class="dottedTooltip" onclick="return tlClick('tl-d22757e1733','pp-d22757e1733');" onmouseover="return tlOver('tl-d22757e1733','pp-d22757e1733');" onmouseout="return tlOut('tl-d22757e1733','pp-d22757e1733');">more</a>)</li></ul> </li><li>Example URL with parameters: "http://jarfiller.com/search?query=xml&amp;maxresults=20"</li></ul> </li><li>A <em>response consists of a status code, a set of headers and a body</em> containing a document. <ul><li>The <a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes">status code</a> is just a number. The most important ones: <ul><li>200 for success</li><li><a href="http://en.wikipedia.org/wiki/HTTP_301">301</a> forwards the client to a different page</li><li><a href="http://en.wikipedia.org/wiki/HTTP_404">404</a> for unknown paths</li><li><a href="http://en.wikipedia.org/wiki/HTTP_500">500</a> for server errors</li></ul> </li><li><em>Headers contain additional information</em> such as cookies. Header values are just string key/value pairs. Usually the web container will set them automatically for you, so you don't need to know them. Wikipedia <a href="http://en.wikipedia.org/wiki/List_of_HTTP_headers">has a complete list</a>.</li><li>The response body is the document sent to the client. In a web browser, this is the document shown to the user.</li></ul> </li></ul><p class="subSecExplanation">This is what a simple request looks like: </p><pre class="subSecConfig"><a href="#" id="tl-d22757e1796" class="dottedTooltip" onclick="return tlClick('tl-d22757e1796','pp-d22757e1799');" onmouseover="return tlOver('tl-d22757e1796','pp-d22757e1799');" onmouseout="return tlOut('tl-d22757e1796','pp-d22757e1799');">GET /guide/jaxb/ HTTP/1.1</a>
<a href="#" id="tl-d22757e1802" class="dottedTooltip" onclick="return tlClick('tl-d22757e1802','pp-d22757e1805');" onmouseover="return tlOver('tl-d22757e1802','pp-d22757e1805');" onmouseout="return tlOut('tl-d22757e1802','pp-d22757e1805');">Host: jarfiller.com</a>
<a href="#" id="tl-d22757e1808" class="dottedTooltip" onclick="return tlClick('tl-d22757e1808','pp-d22757e1811');" onmouseover="return tlOver('tl-d22757e1808','pp-d22757e1811');" onmouseout="return tlOut('tl-d22757e1808','pp-d22757e1811');">User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6</a>
<a href="#" id="tl-d22757e1814" class="dottedTooltip" onclick="return tlClick('tl-d22757e1814','pp-d22757e1817');" onmouseover="return tlOver('tl-d22757e1814','pp-d22757e1817');" onmouseout="return tlOut('tl-d22757e1814','pp-d22757e1817');">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</a>
<a href="#" id="tl-d22757e1822" class="dottedTooltip" onclick="return tlClick('tl-d22757e1822','pp-d22757e1825');" onmouseover="return tlOver('tl-d22757e1822','pp-d22757e1825');" onmouseout="return tlOut('tl-d22757e1822','pp-d22757e1825');">Accept-Language: en-us,en;q=0.8,de-de;q=0.5,de;q=0.3</a>
<a href="#" id="tl-d22757e1828" class="dottedTooltip" onclick="return tlClick('tl-d22757e1828','pp-d22757e1831');" onmouseover="return tlOver('tl-d22757e1828','pp-d22757e1831');" onmouseout="return tlOut('tl-d22757e1828','pp-d22757e1831');">Accept-Encoding: gzip,deflate</a>
<a href="#" id="tl-d22757e1835" class="dottedTooltip" onclick="return tlClick('tl-d22757e1835','pp-d22757e1838');" onmouseover="return tlOver('tl-d22757e1835','pp-d22757e1838');" onmouseout="return tlOut('tl-d22757e1835','pp-d22757e1838');">Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7</a>
<a href="#" id="tl-d22757e1841" class="dottedTooltip" onclick="return tlClick('tl-d22757e1841','pp-d22757e1844');" onmouseover="return tlOver('tl-d22757e1841','pp-d22757e1844');" onmouseout="return tlOut('tl-d22757e1841','pp-d22757e1844');">Connection: keep-alive</a>
				</pre><p class="subSecExplanation"> And here is the server's response (the body containing HTML <em>has been omitted</em> in this example): </p><pre class="subSecConfig"><a href="#" id="tl-d22757e1856" class="dottedTooltip" onclick="return tlClick('tl-d22757e1856','pp-d22757e1859');" onmouseover="return tlOver('tl-d22757e1856','pp-d22757e1859');" onmouseout="return tlOut('tl-d22757e1856','pp-d22757e1859');">HTTP/1.1 200 OK</a>
<a href="#" id="tl-d22757e1862" class="dottedTooltip" onclick="return tlClick('tl-d22757e1862','pp-d22757e1865');" onmouseover="return tlOver('tl-d22757e1862','pp-d22757e1865');" onmouseout="return tlOut('tl-d22757e1862','pp-d22757e1865');">Content-Length: 4227</a>
<a href="#" id="tl-d22757e1868" class="dottedTooltip" onclick="return tlClick('tl-d22757e1868','pp-d22757e1871');" onmouseover="return tlOver('tl-d22757e1868','pp-d22757e1871');" onmouseout="return tlOut('tl-d22757e1868','pp-d22757e1871');">Date: Mon, 01 Mar 2010 18:47:48 GMT</a>
<a href="#" id="tl-d22757e1874" class="dottedTooltip" onclick="return tlClick('tl-d22757e1874','pp-d22757e1877');" onmouseover="return tlOver('tl-d22757e1874','pp-d22757e1877');" onmouseout="return tlOut('tl-d22757e1874','pp-d22757e1877');">Content-Type: application/xhtml+xml; q=0.8</a>
<a href="#" id="tl-d22757e1880" class="dottedTooltip" onclick="return tlClick('tl-d22757e1880','pp-d22757e1883');" onmouseover="return tlOver('tl-d22757e1880','pp-d22757e1883');" onmouseout="return tlOut('tl-d22757e1880','pp-d22757e1883');">Server: Apache/2.2.3 (Debian)</a>
<a href="#" id="tl-d22757e1886" class="dottedTooltip" onclick="return tlClick('tl-d22757e1886','pp-d22757e1889');" onmouseover="return tlOver('tl-d22757e1886','pp-d22757e1889');" onmouseout="return tlOut('tl-d22757e1886','pp-d22757e1889');">Last-Modified: Fri, 26 Feb 2010 19:28:08 GMT</a>
<a href="#" id="tl-d22757e1893" class="dottedTooltip" onclick="return tlClick('tl-d22757e1893','pp-d22757e1896');" onmouseover="return tlOver('tl-d22757e1893','pp-d22757e1896');" onmouseout="return tlOut('tl-d22757e1893','pp-d22757e1896');">Accept-Ranges: bytes</a>
				</pre><p class="subSecExplanation"> An important HTTP concept is the <em>content type</em>, also known as MIME type. It describes the type of document transmitted as body. Basically it is like a file extension, but it can also be used for documents that your servlet created on the fly and thus do not have a file extension. Here are the most important content types:</p><div class="subSecTableDiv"><table><tr><th>Content Type</th><th>File Extension</th><th>Name</th></tr><tr><td>text/html</td><td>.html, .htm</td><td>HTML</td></tr><tr><td>application/xhtml+xml</td><td>.xhtml</td><td>XHTML</td></tr><tr><td>text/plain</td><td>.txt</td><td>Plain text file</td></tr><tr><td>application/pdf</td><td>.pdf</td><td>PDF</td></tr><tr><td>image/png</td><td>.png</td><td>PNG images</td></tr><tr><td>image/jpeg</td><td>.jpg, .jpeg</td><td>JPEG images</td></tr><tr><td>image/gif</td><td>.gif</td><td>GIF images</td></tr></table></div><p class="subSecExplanation">Find a <a href="http://www.iana.org/assignments/media-types/">more types on Wikipedia</a>. </p></div></div><div class="yahbar"><div class="yahhere"><a href="#" onclick="return navToggle();">Servlet 2.5 Guide / Overview</a><br/><a href="/guide/servlet25/"><span>Single Page Mode</span></a>, <a href="#" onclick="return navToggle();"><span>Show Table of Content</span></a></div><div class="yahnext"><a href="servlets.xhtml">Next<br/><span>Servlets</span></a></div></div></div><div id="sidecolumn">
    	<div><h3>Useful Links</h3><div class="sidecolumnSubTitleLine"/>
	  			<a href="http://java.sun.com/products/servlet/">Servlet Homepage</a><br/>
	  			<a href="http://en.wikipedia.org/wiki/Java_Servlet">Servlet on Wikipedia</a><br/>
	  			<a href="http://java.sun.com/javaee/5/docs/api/javax/servlet/package-summary.html">javax.servlet API Docs</a><br/>
	  			<a href="http://java.sun.com/javaee/5/docs/api/javax/servlet/package-summary.html">javax.servlet.http API Docs</a><br/>
	  			<a href="http://jcp.org/aboutJava/communityprocess/mrel/jsr154/index2.html">Servlet 2.5 Specification</a><br/>
	  		</div>
  		
  		<div><h3>Related Documents</h3><div class="sidecolumnSubTitleLine">(on Jarfiller.com)</div>
	  			<a href="/reference/webxml2x/">Web.xml Reference</a><br/>
	  		</div>
  	
  </div></div></div><div id="footer"><div id="footer-content"><div id="footer-left"><div class="footerLine"><a href="/">Home</a> - <a href="/about">About Jarfiller</a> - <a href="/imprint.xhtml">Imprint</a></div><div class="footerLine">Please send feedback and corrections to <a href="mailto:tim@tjansen.de">tim@<span style="display: none">got you</span>tjansen.de</a>.</div><div class="footerLine"><a href="http://www.twitter.com/timjansen">Follow</a> me on Twitter.</div><div class="copyrightLine">© 2010 Tim Jansen; content licensed under <a href="http://creativecommons.org/licenses/by/3.0/us/">cc-by</a>; example source code is public domain
				</div></div><div id="footer-right"><a rel="license" href="http://creativecommons.org/licenses/by/3.0/us/"><img alt="Creative Commons License" style="border-width:0" src="../../images/ext/cc-by-88x31.png"/></a></div></div></div><div id="navbar" onclick="return navToggle();" onmouseover="document.getElementById('navbar').className='mouseover';" onmouseout="document.getElementById('navbar').className='';"/><div id="navcontainer"><div id="navlinks"><div id="navclosebar"><a href="#" onclick="return navClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="navpositionbar" class="navpositionbar"/><h2 id="navtitle">Servlet 2.5 Guide</h2><a id="nav_overview" class="navseclink" href="#overview" onclick="if (event.button == 0) return goTo('#overview', true); else return true;">Overview</a><a id="nav_intro" class="navsublink" href="#intro" onclick="if (event.button == 0) return goTo('#intro', true); else return true;">Intro</a><a id="nav_usecases" class="navsublink" href="#usecases" onclick="if (event.button == 0) return goTo('#usecases', true); else return true;">When should you write a Servlet?</a><a id="nav_requirements" class="navsublink" href="#requirements" onclick="if (event.button == 0) return goTo('#requirements', true); else return true;">What do you need for Servlets?</a><a id="nav_containers" class="navsublink" href="#containers" onclick="if (event.button == 0) return goTo('#containers', true); else return true;">Which container supports which Servlet / JEE version?</a><a id="nav_httpintro" class="navsublink" href="#httpintro" onclick="if (event.button == 0) return goTo('#httpintro', true); else return true;">Short HTTP Introduction</a><a id="nav_servlets" class="navseclink" href="servlets.xhtml#servlets">Servlets</a><a id="nav_servletintro" class="navsublink" href="servlets.xhtml#servletintro">Servlet Intro</a><a id="nav_classoverview" class="navsublink" href="servlets.xhtml#classoverview">Class Overview</a><a id="nav_servletclass" class="navsublink" href="servlets.xhtml#servletclass">Servlet Class</a><a id="nav_servicemethods" class="navsublink" href="servlets.xhtml#servicemethods">Service Dispatching in the HttpServlet</a><a id="nav_lifecycle" class="navsublink" href="servlets.xhtml#lifecycle">The Servlet Lifecycle</a><a id="nav_multithreading" class="navsublink" href="servlets.xhtml#multithreading">Multithreading</a><a id="nav_twothreadsafeways" class="navsublink" href="servlets.xhtml#twothreadsafeways">Two Simple Ways to Write Thread-Safe Servlets</a><a id="nav_webapplications" class="navsublink" href="servlets.xhtml#webapplications">Web Applications</a><a id="nav_webxml" class="navsublink" href="servlets.xhtml#webxml">web.xml</a><a id="nav_applayout" class="navsublink" href="servlets.xhtml#applayout">Example Application Layout</a><a id="nav_contextroot" class="navsublink" href="servlets.xhtml#contextroot">Context Root</a><a id="nav_staticcontent" class="navsublink" href="servlets.xhtml#staticcontent">Static Content</a><a id="nav_eclipse" class="navsublink" href="servlets.xhtml#eclipse">How to Create a Web Application with Eclipse</a><a id="nav_ant" class="navsublink" href="servlets.xhtml#ant">How to Create a Web Application (WAR) with Ant</a><a id="nav_tomcat" class="navsublink" href="servlets.xhtml#tomcat">How to Deploy a Web Application on Tomcat</a><a id="nav_responses" class="navseclink" href="responses.xhtml#responses">Responses</a><a id="nav_textoutput" class="navsublink" href="responses.xhtml#textoutput">Text Output</a><a id="nav_responsebinary" class="navsublink" href="responses.xhtml#responsebinary">Binary Output</a><a id="nav_buffering" class="navsublink" href="responses.xhtml#buffering">Buffering and Committing</a><a id="nav_errors" class="navsublink" href="responses.xhtml#errors">Error Code</a><a id="nav_redirection" class="navsublink" href="responses.xhtml#redirection">Redirection</a><a id="nav_requests" class="navseclink" href="requests.xhtml#requests">Requests</a><a id="nav_reqparameters" class="navsublink" href="requests.xhtml#reqparameters">Request Parameters</a><a id="nav_parameternames" class="navsublink" href="requests.xhtml#parameternames">How to find out which parameters have been sent</a><a id="nav_headers" class="navsublink" href="requests.xhtml#headers">How to read header values</a><a id="nav_paths" class="navsublink" href="requests.xhtml#paths">Paths</a><a id="nav_sessionsandcookies" class="navseclink" href="sessionsandcookies.xhtml#sessionsandcookies">Sessions and Cookies</a><a id="nav_cookies" class="navsublink" href="sessionsandcookies.xhtml#cookies">Cookies</a><a id="nav_sessions" class="navsublink" href="sessionsandcookies.xhtml#sessions">Sessions</a><a id="nav_distributablesessions" class="navsublink" href="sessionsandcookies.xhtml#distributablesessions">Sessions in Distributed Servers (Clusters)</a><a id="nav_sessioncaveat" class="navsublink" href="sessionsandcookies.xhtml#sessioncaveat">Be Careful When Using HttpSession</a><a id="nav_resources" class="navseclink" href="resources.xhtml#resources">Resources</a><a id="nav_resourceannotations" class="navsublink" href="resources.xhtml#resourceannotations">Resource Annotations</a><a id="nav_jndilookup" class="navsublink" href="resources.xhtml#jndilookup">How to get resources with JNDI</a><a id="nav_tomcatresources" class="navsublink" href="resources.xhtml#tomcatresources">How to Provide Resources in Tomcat</a><span class="navseclink">How to... Requests and Responses</span><a id="nav_customheaders" class="navsublink" href="customheaders.xhtml#customheaders">How to Read and Write Additional Headers</a><a id="nav_attributes" class="navsublink" href="attributes.xhtml#attributes">How to Use Attributes in Request and Context</a><a id="nav_getlastmodified" class="navsublink" href="getlastmodified.xhtml#getlastmodified">How to Use HttpServlet.getLastModified to Improve Client-Side Caching</a><a id="nav_contentlength" class="navsublink" href="contentlength.xhtml#contentlength">How to Set the Content Length</a><a id="nav_fileupload" class="navsublink" href="fileupload.xhtml#fileupload">How to Receive File Uploads (Multi-Part File Upload)</a><a id="nav_browserdetection" class="navsublink" href="browserdetection.xhtml#browserdetection">How to Detect the User's Web Browser</a><a id="nav_contentlanguage" class="navsublink" href="contentlanguage.xhtml#contentlanguage">How to Declare the Content Language</a><a id="nav_acceptedlanguages" class="navsublink" href="acceptedlanguages.xhtml#acceptedlanguages">How to Detect the Client's Preferred Languages</a><a id="nav_sendingxml" class="navsublink" href="sendingxml.xhtml#sendingxml">How to Send XML as Response</a><a id="nav_dynamicimages" class="navsublink" href="dynamicimages.xhtml#dynamicimages">How to Generate Images as Response</a><a id="nav_jspforward" class="navsublink" href="jspforward.xhtml#jspforward">How to Use a JSP as Template</a><a id="nav_requestdispatcher" class="navsublink" href="requestdispatcher.xhtml#requestdispatcher">How to Invoke Servlets and JSPs with the RequestDispatcher</a><a id="nav_virtualhosts" class="navsublink" href="virtualhosts.xhtml#virtualhosts">How to Handle Virtual Hosts and Multiple IP Addresses?</a><a id="nav_filters" class="navsublink" href="filters.xhtml#filters">How to Write Filters</a><span class="navseclink">How to... Sessions and Security</span><a id="nav_usermanagement" class="navsublink" href="usermanagement.xhtml#usermanagement">How to Authenticate and Manage Users</a><a id="nav_declarativesecurity" class="navsublink" href="declarativesecurity.xhtml#declarativesecurity">How to Restrict Access to a Web Application (Declarative Security)</a><a id="nav_requiringssl" class="navsublink" href="requiringssl.xhtml#requiringssl">How to Require HTTPS / SSL</a><a id="nav_programmaticsecurity" class="navsublink" href="programmaticsecurity.xhtml#programmaticsecurity">How to Use Authentication Data in Servlets</a><a id="nav_cookielessessions" class="navsublink" href="cookielessessions.xhtml#cookielessessions">How to Use HttpSessions and Authentication without Cookies?</a><span class="navseclink">How to... General</span><a id="nav_addinglibraries" class="navsublink" href="addinglibraries.xhtml#addinglibraries">How to Add Libraries to a Web Application / WAR</a><a id="nav_addingresourcefiles" class="navsublink" href="addingresourcefiles.xhtml#addingresourcefiles">How to Read Files Contained in a Web Application / WAR</a><a id="nav_throwingexceptions" class="navsublink" href="throwingexceptions.xhtml#throwingexceptions">How to Throw Exceptions in Servlets</a><a id="nav_initparameters" class="navsublink" href="initparameters.xhtml#initparameters">Configure your Servlet with Initialization Parameters</a><a id="nav_logging" class="navsublink" href="logging.xhtml#logging">How to Log</a><a id="nav_errorpages" class="navsublink" href="errorpages.xhtml#errorpages">How to Replace the Default Error Page</a><a id="nav_temporarydirectory" class="navsublink" href="temporarydirectory.xhtml#temporarydirectory">How to Get a Temporary Directory</a><a id="nav_ejbinvocation" class="navsublink" href="ejbinvocation.xhtml#ejbinvocation">How to Access an EJB</a><a id="nav_distributedapps" class="navsublink" href="distributedapps.xhtml#distributedapps">How to Create a Distributed Application</a><a id="nav_listeners" class="navsublink" href="listeners.xhtml#listeners">How to Be Notified about Events (Listeners)</a><a id="nav_servlet24" class="navsublink" href="servlet24.xhtml#servlet24">New Features Since Servlet API 2.4</a><a id="nav_andnow" class="navseclink" href="andnow.xhtml#andnow">And now...?</a><a id="nav_nextsteps" class="navsublink" href="andnow.xhtml#nextsteps">Next Steps</a></div></div><div id="popups"><div id="pp-d22757e1405" class="tooltip">You could spend a long time discussing whether mixing code with HTML is a good idea. Common opinion is that it should be avoided and custom tags (another JSP feature) should be used instead.<br/> However, the ability to include Java code makes JSPs very powerful. With JSPs you never have the situation wasting time to find a way around the limits of the template system. You always have pure Java as last resort.</div><div id="pp-d22757e1733" class="tooltip">There are encoding rules to transmit special characters and characters like "=" and "&amp;" in the URL. Spaces will be replaced by "+". All other characters are escaped as "%" character followed by a 2 hexadecimal characters to specify the character code.</div><div id="pp-d22757e1427" class="tooltip">MVC (Model-View-Controller) is the most common pattern to implement user interfaces. The code is split into a Model (represents the data being edited), a View (to present the data to the user) and a Controller (which handles user input and initiates actions).</div><div id="pp-d22757e1438" class="tooltip">Originally Spring was a small and easy-to-use framework, while EJB 2.x application servers were monsters with complex APIs and a huge overhead. Over the years the situation has changed though. Spring grew and is a pretty large system now, while EJB reduced its overhead with version 3.0 and became simpler to use.<br/> Today Spring may still be smaller than EJB application servers, but the difference is not nearly as large as it used to be.</div><div id="pp-d22757e1592" class="tooltip">Websphere Application Server</div><div id="pp-d22757e1799" class="tooltip">The first line contains the command (GET), the path (/guide/jaxb/) and the HTTP protocol version (1.1).</div><div id="pp-d22757e1805" class="tooltip">The required header value "HOST" tells the web server the host name requested by the user. It allows you to host several domains on a single web server.</div><div id="pp-d22757e1811" class="tooltip">This tells the webserver all about the client doing the request. Here, it is a Firefox 3.6 browser running on Windows.</div><div id="pp-d22757e1817" class="tooltip">This header value is a list of comma-separated content types to show the web server what kind of documents the browser can handle. Firefox prefers "text/html" (HTML) or "application/xhtml+xml" (XHTML). Other XML ("application/xml") is also good, but less desirable ("q=0.9"). Everything else will be accepted ("*/*") if necessary.<br/> Note that this header value is ignored by most servlets - just send the browser the requested document.</div><div id="pp-d22757e1825" class="tooltip">Many multilingual pages use this setting to find out which language the user prefers. This user prefers US English ("en-us") over plain English ("en") and German ("de-de" and "de").</div><div id="pp-d22757e1831" class="tooltip">This tells the web server that the browser can handle compressed pages that use the "gzip" or "deflate" (ZIP) compression mechanisms.</div><div id="pp-d22757e1838" class="tooltip">This header value tells the web server what character sets the browser prefers. Here it prefers "ISO-8859" over "utf-8", but will take anything ("*").</div><div id="pp-d22757e1844" class="tooltip">Tells the server to keep the connection open for additional requests.</div><div id="pp-d22757e1859" class="tooltip">The first line of the response always contains the HTTP version used by the server (1.1) and the status code (200) with an explanation (OK).</div><div id="pp-d22757e1865" class="tooltip">This header value contains the length of the body document in bytes.</div><div id="pp-d22757e1871" class="tooltip">This is the date at which the server generated the response.</div><div id="pp-d22757e1877" class="tooltip">This contains the type of the body document. Here, it is XHTML ("application/xhtml+xml").</div><div id="pp-d22757e1883" class="tooltip">Here the web server identifies its version.</div><div id="pp-d22757e1889" class="tooltip">This is the date at which the document has been modified. It may be important for caching.</div><div id="pp-d22757e1896" class="tooltip">If the server sends this, it means that the client is also allowed to request the document partially by specifying a byte range.</div><div id="pp-d22757e144" class="topic"><div class="topicPara"><span class="topicHead">JSP</span><span class="topicAbbreviation"> - JavaServer Pages</span></div><div class="topicPara">JSPs are a template system for generating dynamic web pages. It is tightly integrated with
  		Java and allows mixing Java source code with markup code.</div><div class="topicPara"><span class="topicLinkHead">Homepage: </span><a href="http://java.sun.com/products/jsp/">JavaServer Pages Technology (Sun/Oracle)</a><br/><span class="topicLinkHead">Wikipedia: </span><a href="http://en.wikipedia.org/wiki/JavaServer_Pages">JavaServer Pages</a></div><div class="topicPara"><span class="topicLinkHead">Specification: </span><a href="http://jcp.org/aboutJava/communityprocess/mrel/jsr245/index.html">JSP 2.2</a><br/><span class="topicLinkHead">JSR: </span><a href="http://jcp.org/en/jsr/detail?id=53">JSR-53</a>, <a href="http://jcp.org/en/jsr/detail?id=152">JSR-152</a>, <a href="http://jcp.org/en/jsr/detail?id=245">JSR-245</a></div></div><div id="pp-d22757e217" class="topic"><div class="topicPara"><span class="topicHead">JSF</span><span class="topicAbbreviation"> - JavaServer Faces</span></div><div class="topicPara">JSF is a MVC-based framework for web applications which runs on top of a display technologies such as Facelets (default
  		for JSF 2.0) and JSPs(default for 1.x).</div><div class="topicPara"><span class="topicLinkHead">Homepage: </span><a href="http://java.sun.com/javaee/javaserverfaces/">JavaServer Faces Homepage (Sun/Oracle)</a><br/><span class="topicLinkHead">Wikipedia: </span><a href="http://en.wikipedia.org/wiki/JavaServer_Faces">JavaServer Faces</a></div><div class="topicPara"><span class="topicLinkHead">Specification: </span><a href="http://jcp.org/aboutJava/communityprocess/final/jsr314/index.html">JSF 2.0 Specification</a><br/><span class="topicLinkHead">JSR: </span><a href="http://jcp.org/en/jsr/detail?id=127">JSR-127</a>, <a href="http://jcp.org/en/jsr/detail?id=252">JSR-252</a>, <a href="http://jcp.org/en/jsr/detail?id=314">JSR-314</a></div></div><div id="pp-d22757e257" class="topic"><div class="topicPara"><span class="topicHead">Spring</span></div><div class="topicPara">Spring is a popular application framework for Java. It is not part of Java EE, but usually considered an alternative to using the full JEE stack.</div><div class="topicPara"><span class="topicLinkHead">Homepage: </span><a href="http://www.springsource.org/">Spring Source</a><br/><span class="topicLinkHead">Wikipedia: </span><a href="http://en.wikipedia.org/wiki/Spring_Framework">Spring Framework</a></div><div class="topicPara"><span class="topicLinkHead">API: </span><a href="http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/">Reference</a>, <a href="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/">API</a></div></div><div id="ttCloseBar" class="closeBar"><a href="#" onclick="return tlClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="topicCloseBar" class="closeBar"><a href="#" onclick="return tpcClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div></div></body></html>