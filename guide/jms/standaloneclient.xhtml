<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:page="http://tjansen.de/refPage" xmlns:i="http://tjansen.de/internal"><head><title>Sending and Receiving Messages (Standalone Client) - JMS Guide</title><meta http-equiv="X-UA-Compatible" content="chrome=1"/><meta http-equiv="content-language" content="en"/><link rel="shortcut icon" href="../../images/favicon.png" type="image/png"/><link rel="stylesheet" type="text/css" href="../../style/style.css"/><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6791190-2']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script><script type="text/javascript" src="../../js/all.js"/></head><body id="body"><div id="visibleContent"><div id="top"><a href="/"><img src="../../images/titlebar.png" alt="Jarfiller.com"/></a></div><div id="main"><div id="bodycolumn"><div class="yahbar"><div class="yahprev"><a href="jmsoverview.xhtml">Prev</a></div><h3 class="yahhere"><a href="#" onclick="return navToggle();">JMS Guide / Sending and Receiving Messages (Standalone Client)</a></h3><div class="yahnext"><a href="sendingreceivingejb3.xhtml">Next</a></div></div><h1 id="sec_standaloneclient" class="multipageTitle"><a name="standaloneclient">Sending and Receiving Messages (Standalone Client)</a></h1><div class="subSecRow1" id="sec_sending"><div class="subSecHead" id="sechd_sending"><a name="sending">Sending a message</a><br/>(<a href="#" id="tl-d18684e415" class="dottedTooltip" onclick="return tlClick('tl-d18684e415','pp-d18684e420');" onmouseover="return tlOver('tl-d18684e415','pp-d18684e420');" onmouseout="return tlOut('tl-d18684e415','pp-d18684e420');">more</a>)
		</div><div class="subSecContent" id="seccnt_sending"><pre class="subSecCode"><code><a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html" class="javadoc">ConnectionFactory</a> factory = 
  new ActiveMQConnectionFactory("tcp://localhost:61616");  <span class="cmt">// <strong class="warn">ActiveMQ-specific</strong> (<a href="#" id="tl-d18684e457" class="dottedTooltip" onclick="return tlClick('tl-d18684e457','pp-d18684e457');" onmouseover="return tlOver('tl-d18684e457','pp-d18684e457');" onmouseout="return tlOut('tl-d18684e457','pp-d18684e457');">more</a>)</span>

<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html" class="javadoc">Connection</a> con = factory.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html#createConnection()" class="javadoc">createConnection</a>();

try {
  <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html" class="javadoc">Session</a> session = 
      con.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html#createSession(boolean, int)" class="javadoc">createSession</a>(false, <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html#AUTO_ACKNOWLEDGE" class="javadoc">Session.AUTO_ACKNOWLEDGE</a>);  <span class="cmt">// non-transacted session (<a href="#" id="tl-d18684e510" class="dottedTooltip" onclick="return tlClick('tl-d18684e510','pp-d18684e510');" onmouseover="return tlOver('tl-d18684e510','pp-d18684e510');" onmouseout="return tlOut('tl-d18684e510','pp-d18684e510');">more</a>)</span>

  <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Queue.html" class="javadoc">Queue</a> queue = session.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html#createQueue(java.lang.String)" class="javadoc">createQueue</a>("test.queue");         <span class="cmt">// <strong class="warn">only specifies queue name</strong> (<a href="#" id="tl-d18684e546" class="dottedTooltip" onclick="return tlClick('tl-d18684e546','pp-d18684e546');" onmouseover="return tlOver('tl-d18684e546','pp-d18684e546');" onmouseout="return tlOut('tl-d18684e546','pp-d18684e546');">more</a>)</span>

  <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/MessageProducer.html" class="javadoc">MessageProducer</a> producer = session.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html#createProducer(javax.jms.Destination)" class="javadoc">createProducer</a>(queue);
  <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Message.html" class="javadoc">Message</a> msg = session.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html#createTextMessage(java.lang.String)" class="javadoc">createTextMessage</a>("hello queue");  <span class="cmt">// text message (<a href="#" id="tl-d18684e589" class="dottedTooltip" onclick="return tlClick('tl-d18684e589','pp-d18684e589');" onmouseover="return tlOver('tl-d18684e589','pp-d18684e589');" onmouseout="return tlOut('tl-d18684e589','pp-d18684e589');">more</a>)</span>
  producer.<em><a href="http://java.sun.com/javaee/5/docs/api/javax/jms/MessageProducer.html#send(javax.jms.Message)" class="javadoc">send</a></em>(msg);
}
finally {
  con.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html#close()" class="javadoc">close</a>();                                             <span class="cmt">// free all resources (<a href="#" id="tl-d18684e615" class="dottedTooltip" onclick="return tlClick('tl-d18684e615','pp-d18684e615');" onmouseover="return tlOver('tl-d18684e615','pp-d18684e615');" onmouseout="return tlOut('tl-d18684e615','pp-d18684e615');">more</a>)</span>
}
</code></pre></div></div><div class="subSecRow2" id="sec_polling"><div class="subSecHead" id="sechd_polling"><a name="polling">Polling for messages</a><br/>(<a href="#" id="tl-d18684e645" class="dottedTooltip" onclick="return tlClick('tl-d18684e645','pp-d18684e650');" onmouseover="return tlOver('tl-d18684e645','pp-d18684e650');" onmouseout="return tlOut('tl-d18684e645','pp-d18684e650');">more</a>)
		</div><div class="subSecContent" id="seccnt_polling"><pre class="subSecCode"><code><a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html" class="javadoc">ConnectionFactory</a> factory = 
  new ActiveMQConnectionFactory("tcp://localhost:61616");  <span class="cmt">// <strong class="warn">ActiveMQ-specific</strong> (<a href="#" id="tl-d18684e687" class="dottedTooltip" onclick="return tlClick('tl-d18684e687','pp-d18684e457');" onmouseover="return tlOver('tl-d18684e687','pp-d18684e457');" onmouseout="return tlOut('tl-d18684e687','pp-d18684e457');">more</a>)</span>

<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html" class="javadoc">Connection</a> con = factory.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html#createConnection()" class="javadoc">createConnection</a>();

try {
  <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html" class="javadoc">Session</a> session = 
      con.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html#createSession(boolean, int)" class="javadoc">createSession</a>(false, <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html#AUTO_ACKNOWLEDGE" class="javadoc">Session.AUTO_ACKNOWLEDGE</a>);  <span class="cmt">// non-transacted session (<a href="#" id="tl-d18684e721" class="dottedTooltip" onclick="return tlClick('tl-d18684e721','pp-d18684e721');" onmouseover="return tlOver('tl-d18684e721','pp-d18684e721');" onmouseout="return tlOut('tl-d18684e721','pp-d18684e721');">more</a>)</span>

  <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Queue.html" class="javadoc">Queue</a> queue = session.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html#createQueue(java.lang.String)" class="javadoc">createQueue</a>("test.queue");         <span class="cmt">// only specifies queue name (<a href="#" id="tl-d18684e755" class="dottedTooltip" onclick="return tlClick('tl-d18684e755','pp-d18684e546');" onmouseover="return tlOver('tl-d18684e755','pp-d18684e546');" onmouseout="return tlOut('tl-d18684e755','pp-d18684e546');">more</a>)</span>

  <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/MessageConsumer.html" class="javadoc">MessageConsumer</a> consumer = session.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html#createConsumer(javax.jms.Destination)" class="javadoc">createConsumer</a>(queue);

  con.<em><a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html#start()" class="javadoc">start</a></em>();                                             <span class="cmt">// start the connection (<a href="#" id="tl-d18684e779" class="dottedTooltip" onclick="return tlClick('tl-d18684e779','pp-d18684e779');" onmouseover="return tlOver('tl-d18684e779','pp-d18684e779');" onmouseout="return tlOut('tl-d18684e779','pp-d18684e779');">more</a>)</span>
  while (true) {                                           <span class="cmt">// run forever</span>
    <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Message.html" class="javadoc">Message</a> msg = <em>consumer.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/MessageConsumer.html#receive()" class="javadoc">receive</a></em>();                      <span class="cmt">// blocking! (<a href="#" id="tl-d18684e808" class="dottedTooltip" onclick="return tlClick('tl-d18684e808','pp-d18684e808');" onmouseover="return tlOver('tl-d18684e808','pp-d18684e808');" onmouseout="return tlOut('tl-d18684e808','pp-d18684e808');">more</a>)</span>
    if (! (msg instanceof <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/TextMessage.html" class="javadoc">TextMessage</a>))
      throw new RuntimeException("Expected a TextMessage");
    <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/TextMessage.html" class="javadoc">TextMessage</a> tm = (<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/TextMessage.html" class="javadoc">TextMessage</a>) msg;
    System.out.println(tm.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/TextMessage.html#getText()" class="javadoc">getText</a>());                      <span class="cmt">// print message content</span>
  }
}
finally {
  con.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html#close()" class="javadoc">close</a>();                                             <span class="cmt">// free all resources (<a href="#" id="tl-d18684e864" class="dottedTooltip" onclick="return tlClick('tl-d18684e864','pp-d18684e615');" onmouseover="return tlOver('tl-d18684e864','pp-d18684e615');" onmouseout="return tlOut('tl-d18684e864','pp-d18684e615');">more</a>)</span>
}
</code></pre></div></div><div class="subSecRow1" id="sec_messagelistener"><div class="subSecHead" id="sechd_messagelistener"><a name="messagelistener">Using a MessageListener</a><br/>(<a href="#" id="tl-d18684e871" class="dottedTooltip" onclick="return tlClick('tl-d18684e871','pp-d18684e876');" onmouseover="return tlOver('tl-d18684e871','pp-d18684e876');" onmouseout="return tlOut('tl-d18684e871','pp-d18684e876');">more</a>)
		</div><div class="subSecContent" id="seccnt_messagelistener"><pre class="subSecCode"><code><a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html" class="javadoc">ConnectionFactory</a> factory = 
  new ActiveMQConnectionFactory("tcp://localhost:61616");  <span class="cmt">// <strong class="warn">ActiveMQ-specific</strong> (<a href="#" id="tl-d18684e910" class="dottedTooltip" onclick="return tlClick('tl-d18684e910','pp-d18684e457');" onmouseover="return tlOver('tl-d18684e910','pp-d18684e457');" onmouseout="return tlOut('tl-d18684e910','pp-d18684e457');">more</a>)</span>

<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html" class="javadoc">Connection</a> con = factory.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html#createConnection()" class="javadoc">createConnection</a>();

try {
  <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html" class="javadoc">Session</a> session = 
      con.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html#createSession(boolean, int)" class="javadoc">createSession</a>(false, <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html#AUTO_ACKNOWLEDGE" class="javadoc">Session.AUTO_ACKNOWLEDGE</a>);  <span class="cmt">// non-transacted session (<a href="#" id="tl-d18684e944" class="dottedTooltip" onclick="return tlClick('tl-d18684e944','pp-d18684e721');" onmouseover="return tlOver('tl-d18684e944','pp-d18684e721');" onmouseout="return tlOut('tl-d18684e944','pp-d18684e721');">more</a>)</span>

  <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Queue.html" class="javadoc">Queue</a> queue = session.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html#createQueue(java.lang.String)" class="javadoc">createQueue</a>("test.queue");         <span class="cmt">// only specifies queue name (<a href="#" id="tl-d18684e958" class="dottedTooltip" onclick="return tlClick('tl-d18684e958','pp-d18684e546');" onmouseover="return tlOver('tl-d18684e958','pp-d18684e546');" onmouseout="return tlOut('tl-d18684e958','pp-d18684e546');">more</a>)</span>

  <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/MessageConsumer.html" class="javadoc">MessageConsumer</a> consumer = session.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html#createConsumer(javax.jms.Destination)" class="javadoc">createConsumer</a>(queue);

  consumer.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/MessageConsumer.html#setMessageListener(javax.jms.MessageListener)" class="javadoc"><em>setMessageListener</em></a>(new <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/MessageListener.html" class="javadoc">MessageListener</a>() {
    public void <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/onMessage.html" class="javadoc"><em>onMessage</em></a>(<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Message.html" class="javadoc">Message</a> msg) {
      try {
        if (! (msg instanceof <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/TextMessage.html" class="javadoc">TextMessage</a>))
          throw new RuntimeException("no text message");
        <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/TextMessage.html" class="javadoc">TextMessage</a> tm = (<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/TextMessage.html" class="javadoc">TextMessage</a>) msg;
        System.out.println(tm.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/TextMessage.html#getText()" class="javadoc">getText</a>());                  <span class="cmt">// print message</span>
      }
      catch (<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/JMSException.html" class="javadoc">JMSException</a> e) {
        System.err.println("Error reading message");
      }
    }
  });

  con.<em><a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html#start()" class="javadoc">start</a></em>();                                             <span class="cmt">// start the connection (<a href="#" id="tl-d18684e1056" class="dottedTooltip" onclick="return tlClick('tl-d18684e1056','pp-d18684e1056');" onmouseover="return tlOver('tl-d18684e1056','pp-d18684e1056');" onmouseout="return tlOut('tl-d18684e1056','pp-d18684e1056');">more</a>)</span>
  Thread.sleep(60 * 1000);                                 <span class="cmt">// receive messages for 60s (<a href="#" id="tl-d18684e1069" class="dottedTooltip" onclick="return tlClick('tl-d18684e1069','pp-d18684e1069');" onmouseover="return tlOver('tl-d18684e1069','pp-d18684e1069');" onmouseout="return tlOut('tl-d18684e1069','pp-d18684e1069');">more</a>)</span>
finally {
  con.<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html#close()" class="javadoc">close</a>();                                             <span class="cmt">// free all resources (<a href="#" id="tl-d18684e1089" class="dottedTooltip" onclick="return tlClick('tl-d18684e1089','pp-d18684e615');" onmouseover="return tlOver('tl-d18684e1089','pp-d18684e615');" onmouseout="return tlOut('tl-d18684e1089','pp-d18684e615');">more</a>)</span>
}
</code></pre></div></div><div class="subSecRow2" id="sec_jndi"><div class="subSecHead" id="sechd_jndi"><a name="jndi">JNDI</a></div><div class="subSecContent" id="seccnt_jndi"><h2 class="subSecSummaryNoClick">Getting the ConnectionFactory via JNDI</h2><p class="subSecExplanation">The only (relatively) non-implementation-specific way to obtain the JMS implementation's <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html" class="javadoc">ConnectionFactory</a> and <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Destination.html" class="javadoc">Destination</a>s is to <em>get them from a JNDI server</em>. This is usually only possibly if you write your program as client for an application server. The following example shows how to do this with JBoss: </p><pre class="subSecCode"><code><a href="http://java.sun.com/javase/6/docs/api/java/util/Hashtable.html" class="javadoc">Hashtable</a>&lt;String,String&gt; env = new <a href="http://java.sun.com/javase/6/docs/api/java/util/Hashtable.html" class="javadoc">Hashtable</a>&lt;String, String&gt;();
env.put("java.naming.factory.initial",                        <span class="cmt">// <strong class="warn">JBoss-specific</strong> (<a href="#" id="tl-d18684e1134" class="dottedTooltip" onclick="return tlClick('tl-d18684e1134','pp-d18684e1134');" onmouseover="return tlOver('tl-d18684e1134','pp-d18684e1134');" onmouseout="return tlOut('tl-d18684e1134','pp-d18684e1134');">more</a>)</span>
        "org.jnp.interfaces.NamingContextFactory");
env.put("java.naming.provider.url", "jnp://localhost:1099");  <span class="cmt">// host address</span>
env.put("java.naming.factory.url.pkgs", 
        "org.jboss.naming:org.jnp.interfaces");
<a href="http://java.sun.com/javase/6/docs/api/javax/naming/Context.html" class="javadoc">Context</a> ctx = new <a href="http://java.sun.com/javase/6/docs/api/javax/naming/InitialContext.html" class="javadoc">InitialContext</a>(env);

<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html" class="javadoc">ConnectionFactory</a> factory = (<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html" class="javadoc">ConnectionFactory</a>)
           ctx.<a href="http://java.sun.com/javase/6/docs/api/javax/naming/Context.html#lookup(java.lang.String)" class="javadoc">lookup</a>("<em>/ConnectionFactory</em>");                  <span class="cmt">// obtain factory (<a href="#" id="tl-d18684e1180" class="dottedTooltip" onclick="return tlClick('tl-d18684e1180','pp-d18684e1180');" onmouseover="return tlOver('tl-d18684e1180','pp-d18684e1180');" onmouseout="return tlOut('tl-d18684e1180','pp-d18684e1180');">more</a>)</span>
<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Queue.html" class="javadoc">Queue</a> queue = (<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Queue.html" class="javadoc">Queue</a>) 
           ctx.<a href="http://java.sun.com/javase/6/docs/api/javax/naming/Context.html#lookup(java.lang.String)" class="javadoc">lookup</a>("<em>/queue/JarfillerQueue</em>");               <span class="cmt">// obtain queue (<a href="#" id="tl-d18684e1205" class="dottedTooltip" onclick="return tlClick('tl-d18684e1205','pp-d18684e1205');" onmouseover="return tlOver('tl-d18684e1205','pp-d18684e1205');" onmouseout="return tlOut('tl-d18684e1205','pp-d18684e1205');">more</a>)</span>
<span class="abstract">...</span>
</code></pre></div></div><div class="subSecRow1" id="sec_activemqsetup"><div class="subSecHead" id="sechd_activemqsetup"><a name="activemqsetup">ActiveMQ Setup</a></div><div class="subSecContent" id="seccnt_activemqsetup"><h2 class="subSecSummaryNoClick">How to set up ActiveMQ</h2><p class="subSecExplanation">Setting up a ActiveMQ server is fairly easy:</p><ul class="subSecList"><li>Download a ActiveMQ distribution from <a href="http://activemq.apache.org">activemq.apache.org</a> and unpack it somewhere</li><li>You can start the server immediately, running unsecured on localhost, using the script <span class="idf">bin/activemq</span></li><li>When it is running, you can access your local server's console on <a href="http://localhost:8161/admin/">http://localhost:8161/admin/</a></li><li>Configure it by modifying <span class="idf">conf/activemq.xml</span></li></ul><p class="subSecExplanation">In order to compile and run the client, just include the JAR files from the server's <span class="idf">lib</span> directory in your CLASSPATH.</p></div></div><div class="subSecRow2" id="sec_webspheremqsetup"><div class="subSecHead" id="sechd_webspheremqsetup"><a name="webspheremqsetup">Websphere MQ Setup</a></div><div class="subSecContent" id="seccnt_webspheremqsetup"><h2 class="subSecSummaryNoClick">How to set up Websphere MQ</h2><p class="subSecExplanation">Setting up a client for a Websphere MQ server is similar to ActiveMQ. You only need to create a <a href="http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj27600_.htm" class="javadoc">MQConnectionFactory</a> instance and configure it. The configuration of Websphere MQ is a bit more complicated that ActiveMQ's, because you need to create a queue manager and a channel in the server, and then specify it in the client. But once the client has obtained the <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html" class="javadoc">ConnectionFactory</a>, the usage is exactly like Active MQ's:</p><pre class="subSecCode"><code>import com.ibm.mq.jms.*;
<span class="abstract">...</span>
<a href="http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj27600_.htm" class="javadoc">MQConnectionFactory</a> factory = <a href="http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj27620_.htm" class="javadoc">new MQConnectionFactory</a>();
factory.<a href="http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj28480_.htm" class="javadoc">setHostName</a>("localhost");                          <span class="cmt">// server IP address / name</span>
factory.<a href="http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj28880_.htm" class="javadoc">setTransportType</a>(<a href="http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj31870_.htm" class="javadoc">JMSC.MQJMS_TP_CLIENT_MQ_TCPIP</a>);   <span class="cmt">// for TCP/IP</span>
factory.<a href="http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj28370_.htm" class="javadoc">setChannel</a>("my.channel");                          <span class="cmt">// server connection channel to use</span>
factory.<a href="http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj28650_.htm" class="javadoc">setQueueManager</a>("my.queue.manager");               <span class="cmt">// queue manager to use</span>
</code></pre><p class="subSecExplanation">In order to compile and run the client, you only need two JAR files: <span class="idf">com.ibm.mq.jar</span> and <span class="idf">com.ibm.mq.jms.jar</span>. Both should ship with the Websphere MQ client distributions.</p></div></div><div class="yahbar"><div class="yahprev"><a href="jmsoverview.xhtml">Prev<br/><span>Overview</span></a></div><div class="yahhere"><a href="#" onclick="return navToggle();">JMS Guide / Sending and Receiving Messages (Standalone Client)</a><br/><a href="/guide/jms/"><span>Single Page Mode</span></a>, <a href="#" onclick="return navToggle();"><span>Show Table of Content</span></a></div><div class="yahnext"><a href="sendingreceivingejb3.xhtml">Next<br/><span>Sending and Receiving Messages in EJB 3 Applications</span></a></div></div></div><div id="sidecolumn">
    	<div><h3>Useful Links</h3><div class="sidecolumnSubTitleLine"/>
  			<a href="http://java.sun.com/products/jms/">JMS Homepage</a><br/>
  			<a href="http://en.wikipedia.org/wiki/Java_Message_Service">JMS on Wikipedia</a><br/>
  			<a href="http://java.sun.com/javaee/5/docs/api/javax/jms/package-summary.html">javax.jms API Docs</a><br/>
  			<a href="http://java.sun.com/products/jms/docs.html">JMS Specification</a><br/>
  		</div>
  </div></div></div><div id="footer"><div id="footer-content"><div id="footer-left"><div class="footerLine"><a href="/">Home</a> - <a href="/about">About Jarfiller</a> - <a href="/imprint.xhtml">Imprint</a></div><div class="footerLine">Please send feedback and corrections to <a href="mailto:tim@tjansen.de">tim@<span style="display: none">got you</span>tjansen.de</a>.</div><div class="footerLine"><a href="http://www.twitter.com/timjansen">Follow</a> me on Twitter.</div><div class="copyrightLine">© 2010 Tim Jansen; content licensed under <a href="http://creativecommons.org/licenses/by/3.0/us/">cc-by</a>; example source code is public domain
				</div></div><div id="footer-right"><a rel="license" href="http://creativecommons.org/licenses/by/3.0/us/"><img alt="Creative Commons License" style="border-width:0" src="../../images/ext/cc-by-88x31.png"/></a></div></div></div><div id="navbar" onclick="return navToggle();" onmouseover="document.getElementById('navbar').className='mouseover';" onmouseout="document.getElementById('navbar').className='';"/><div id="navcontainer"><div id="navlinks"><div id="navclosebar"><a href="#" onclick="return navClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="navpositionbar" class="navpositionbar"/><h2 id="navtitle">JMS Guide</h2><a id="nav_jmsoverview" class="navseclink" href="jmsoverview.xhtml#jmsoverview">Overview</a><a id="nav_intro" class="navsublink" href="jmsoverview.xhtml#intro">Intro</a><a id="nav_usecases" class="navsublink" href="jmsoverview.xhtml#usecases">When should JMS be used?</a><a id="nav_requirements" class="navsublink" href="jmsoverview.xhtml#requirements">What do you need for JMS?</a><a id="nav_destinations" class="navsublink" href="jmsoverview.xhtml#destinations">Destinations</a><a id="nav_standaloneclient" class="navseclink" href="#standaloneclient" onclick="if (event.button == 0) return goTo('#standaloneclient', true); else return true;">Sending and Receiving Messages (Standalone Client)</a><a id="nav_sending" class="navsublink" href="#sending" onclick="if (event.button == 0) return goTo('#sending', true); else return true;">Sending a message</a><a id="nav_polling" class="navsublink" href="#polling" onclick="if (event.button == 0) return goTo('#polling', true); else return true;">Polling for messages</a><a id="nav_messagelistener" class="navsublink" href="#messagelistener" onclick="if (event.button == 0) return goTo('#messagelistener', true); else return true;">Using a MessageListener</a><a id="nav_jndi" class="navsublink" href="#jndi" onclick="if (event.button == 0) return goTo('#jndi', true); else return true;">Getting the ConnectionFactory via JNDI</a><a id="nav_activemqsetup" class="navsublink" href="#activemqsetup" onclick="if (event.button == 0) return goTo('#activemqsetup', true); else return true;">How to set up ActiveMQ</a><a id="nav_webspheremqsetup" class="navsublink" href="#webspheremqsetup" onclick="if (event.button == 0) return goTo('#webspheremqsetup', true); else return true;">How to set up Websphere MQ</a><a id="nav_sendingreceivingejb3" class="navseclink" href="sendingreceivingejb3.xhtml#sendingreceivingejb3">Sending and Receiving Messages in EJB 3 Applications</a><a id="nav_sendingejb3" class="navsublink" href="sendingreceivingejb3.xhtml#sendingejb3">Sending Messages</a><a id="nav_receivingejb3" class="navsublink" href="sendingreceivingejb3.xhtml#receivingejb3">Receiving messages</a><a id="nav_jbosssetup" class="navsublink" href="sendingreceivingejb3.xhtml#jbosssetup">How to set up JBoss 5.x</a><a id="nav_topics" class="navseclink" href="topics.xhtml#topics">Using Topics</a><a id="nav_sendingtopics" class="navsublink" href="topics.xhtml#sendingtopics">Sending Topic Messages</a><a id="nav_receivingtopics" class="navsublink" href="topics.xhtml#receivingtopics">Receiving Topic Messages</a><a id="nav_durablesubscription" class="navsublink" href="topics.xhtml#durablesubscription">Durable Subscription</a><a id="nav_endingsubscription" class="navsublink" href="topics.xhtml#endingsubscription">Cancelling a subscription</a><a id="nav_messagetypes" class="navseclink" href="messagetypes.xhtml#messagetypes">Message Types</a><a id="nav_textmessages" class="navsublink" href="messagetypes.xhtml#textmessages">TextMessage</a><a id="nav_mapmessages" class="navsublink" href="messagetypes.xhtml#mapmessages">MapMessage</a><a id="nav_streammessages" class="navsublink" href="messagetypes.xhtml#streammessages">StreamMessage</a><a id="nav_objectmessages" class="navsublink" href="messagetypes.xhtml#objectmessages">ObjectMessage</a><a id="nav_bytesmessages" class="navsublink" href="messagetypes.xhtml#bytesmessages">BytesMessage</a><a id="nav_emptymessages" class="navsublink" href="messagetypes.xhtml#emptymessages">Empty Messages</a><span class="navseclink">How to...</span><a id="nav_messageheaders" class="navsublink" href="messageheaders.xhtml#messageheaders">How to use Message Headers</a><a id="nav_messageproperties" class="navsublink" href="messageproperties.xhtml#messageproperties">How to read and set Message Properties</a><a id="nav_selectors" class="navsublink" href="selectors.xhtml#selectors">How to use Message Selectors to filter messages</a><a id="nav_xml" class="navsublink" href="xml.xhtml#xml">How to send and receive XML messages with DOM or JAXB</a><a id="nav_achknowledgement" class="navsublink" href="achknowledgement.xhtml#achknowledgement">How to control acknowledgement</a><a id="nav_browsing" class="navsublink" href="browsing.xhtml#browsing">How to browse the messages in a queue</a><a id="nav_authentication" class="navsublink" href="authentication.xhtml#authentication">How to authenticate a connection</a><a id="nav_temporaryqueues" class="navsublink" href="temporaryqueues.xhtml#temporaryqueues">How to Create Temporary Queues or Topics</a><a id="nav_requestresponse" class="navsublink" href="requestresponse.xhtml#requestresponse">How to send a response to a message (Request/Reply)</a><a id="nav_deliveryoptions" class="navsublink" href="deliveryoptions.xhtml#deliveryoptions">How to Control Message Delivery (Delivery Mode, Time-to-live and Priority)</a><a id="nav_activationproperties" class="navsublink" href="activationproperties.xhtml#activationproperties">How to Configure a Message-Driven Bean (Activation Properties, Durable Subscriptions)</a><a id="nav_concurrency" class="navsublink" href="concurrency.xhtml#concurrency">How to use JMS in multi-threaded applications</a><a id="nav_classes10" class="navsublink" href="classes10.xhtml#classes10">How to Use QueueConnectionFactory, QueueConnection, QueueSession...</a><a id="nav_andnow" class="navseclink" href="andnow.xhtml#andnow">And now...?</a><a id="nav_nextsteps" class="navsublink" href="andnow.xhtml#nextsteps">Next Steps</a></div></div><div id="popups"><div id="pp-d18684e420" class="tooltip">Sending a message requires several steps. First you need to obtain a <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html" class="javadoc">ConnectionFactory</a>, which must be set up in a provider-specific way. Then you create the <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html" class="javadoc">Connection</a>, create a <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html" class="javadoc">Session</a> for the <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html" class="javadoc">Connection</a>, and finally a <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/MessageProducer.html" class="javadoc">MessageProducer</a>. The <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/MessageProducer.html" class="javadoc">MessageProducer</a> allows you to send the messages.<br/> This section's example shows you how to send a message to a ActiveMQ server.</div><div id="pp-d18684e457" class="tooltip"> Creating a <span class="idf">ConnectionFactory</span> is always JMS-provider specific. The JMS Specification suggests that an administrator should configure a JMS <span class="idf">ConnectionFactory</span> and put it in a JNDI namespace where the application can obtain it. For small applications this usually too complicated, so most JMS providers offer a simple way to create ConnectionFactories as alternative.<br/> This example shows how to set up the <span class="idf">ConnectionFactory</span> for <em>ActiveMQ</em>, for a server running on <span class="idf">localhost</span> without authentication. </div><div id="pp-d18684e510" class="tooltip">The first argument of the <span class="idf">createSession</span> method specifies whether the <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html" class="javadoc">Session</a> will be transacted or not. Transacted sessions send messages and acknowledge message reception only after a <span class="idf">commit</span>. The second argument specifies the way messages will be acknowledged if the <span class="idf">Session</span> is not transacted (for transacted sessions it will be ignored). <span class="idf">AUTO_ACKNOWLEDGE</span> means that the messages will be acknowledged automatically upon reception. <span class="idf">CLIENT_ACKNOWLEDGE</span> allows manual acknowledgement. This is important for receiving messages, as messages will only be removed from the queue after the reception has been acknowledged. For this example, which only sends a message, it does not matter.</div><div id="pp-d18684e546" class="tooltip"> The <span class="idf">Queue</span> object only specifies the name of the queue to use, but <em>does not create it in the server</em>. The exact details of how <span class="idf">createQueue</span> works is JMS provider specific. In a complex setup, the <span class="idf">Queue</span> object should be taken from the JNDI context, just like the <span class="idf">ConnectionFactory</span>.<br/> Note that some messaging servers, like Websphere MQ, require you to create the queues in the server using their administrative tools before you can put any messages into them. Others, like ActiveMQ, create new queues dynamically as soon as they receive a message for a queue that does not exist yet.</div><div id="pp-d18684e589" class="tooltip">While this <span class="idf">Message</span> is a simple text message, JMS provides other message types. They will be shown later.</div><div id="pp-d18684e615" class="tooltip">In order to free any acquired resources you should always <span class="idf">close</span> any <span class="idf">Connection</span>s, <span class="idf">Session</span>s and <span class="idf">MessageProducer</span>s that you created.<br/> The <span class="idf">close</span> methods close constituent objects as well, so <em>closing the Connection is sufficient</em> in this example.</div><div id="pp-d18684e650" class="tooltip">Polling a message requires several steps. First you need to obtain a <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/ConnectionFactory.html" class="javadoc">ConnectionFactory</a>, which must be set up in a provider-specific way. Then you create the <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html" class="javadoc">Connection</a>, create a <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html" class="javadoc">Session</a> for the <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Connection.html" class="javadoc">Connection</a>, and finally a <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/MessageConsumer.html" class="javadoc">MessageConsumer</a>. The <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/MessageConsumer.html" class="javadoc">MessageConsumer</a> allows you to poll for messages.<br/> This section's example runs indefinitely to read messages from a ActiveMQ server and print them.</div><div id="pp-d18684e721" class="tooltip">The first argument of the <span class="idf">createSession</span> method specifies whether the <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html" class="javadoc">Session</a> will be transacted or not. Transacted sessions send messages and acknowledge message reception only after a <span class="idf">commit</span>. The second argument specifies the way messages will be acknowledged if the <span class="idf">Session</span> is not transacted (for transacted sessions it will be ignored). <span class="idf">AUTO_ACKNOWLEDGE</span> means that the messages will be acknowledged automatically upon reception. <span class="idf">CLIENT_ACKNOWLEDGE</span> allows manual acknowledgement.</div><div id="pp-d18684e779" class="tooltip">After you have set up your application, you must call <span class="idf">start</span> before you can receive any messages. You can also call <span class="idf">stop</span> on the connection if the application should not receive messages anymore. Note that this is mostly important when you use a <span class="idf">MessageListener</span>.</div><div id="pp-d18684e808" class="tooltip"> <span class="idf">receive</span> waits until a message is in the queue and then returns it. Other methods in <span class="idf">MessageConsumer</span> allow you to wait for a specified amount of time for a message, return immediately if there is no message, or allow you to set a <span class="idf">MessageListener</span> that is notified asynchronously (in a separate thread).</div><div id="pp-d18684e876" class="tooltip">Instead of polling, you can also implement the <span class="idf">MessageListener</span> interface. Once you registered an instance of <span class="idf">MessageListener</span> for the <a href="http://java.sun.com/javaee/5/docs/api/javax/jms/Session.html" class="javadoc">Session</a>, its <span class="idf">onMessage</span> method will be invoked every time you receive a message. This happens asynchronously, not in the thread that started the connections. Thus if you go this way without the help of an application server, you need to be sure that your application is <em>thread-safe</em>.<br/> This section's example runs indefinitely to read messages from a ActiveMQ server and print them.</div><div id="pp-d18684e1056" class="tooltip">After you have set up your application, you must call <span class="idf">start</span> before you can receive any messages. You can also call <span class="idf">stop</span> on the connection if the application should not receive messages anymore.</div><div id="pp-d18684e1069" class="tooltip">The <span class="idf">MessageListener</span> set above is working asynchronously. Thus, while this thread is sleeping, the JMS provider will invoke the <span class="idf">MessageListener</span> for every incoming message.</div><div id="pp-d18684e1134" class="tooltip">Note that for other application servers you need different values in your environment. </div><div id="pp-d18684e1180" class="tooltip">Retrieves the <span class="idf">ConnectionFactory</span> from the JNDI server. "/ConnectionFactory" is the JNDI name of the factory, as configured in the server.</div><div id="pp-d18684e1205" class="tooltip">Retrieves the <span class="idf">Queue</span> from the JNDI server. "/queue/JarfillerQueue" is the JNDI name of the queue object, as configured in the server.</div><div id="ttCloseBar" class="closeBar"><a href="#" onclick="return tlClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="topicCloseBar" class="closeBar"><a href="#" onclick="return tpcClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div></div></body></html>