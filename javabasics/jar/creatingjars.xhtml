<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:page="http://tjansen.de/refPage" xmlns:i="http://tjansen.de/internal"><head><title>Creating JARs - Java Basics: JAR Files</title><meta http-equiv="X-UA-Compatible" content="chrome=1"/><meta http-equiv="content-language" content="en"/><link rel="shortcut icon" href="../../images/favicon.png" type="image/png"/><link rel="stylesheet" type="text/css" href="../../style/style.css"/><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6791190-2']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script><script type="text/javascript" src="../../js/all.js"/></head><body id="body"><div id="visibleContent"><div id="top"><a href="/"><img src="../../images/titlebar.png" alt="Jarfiller.com"/></a></div><div id="main"><div id="bodycolumn"><div class="yahbar"><div class="yahprev"><a href="overview.xhtml">Prev</a></div><h3 class="yahhere"><a href="#" onclick="return navToggle();">Java Basics: JAR Files / Creating JARs</a></h3><div class="yahnext"><a href="executables.xhtml">Next</a></div></div><h1 id="sec_creatingjars" class="multipageTitle"><a name="creatingjars">Creating JARs</a></h1><div class="subSecRow2" id="sec_structure"><div class="subSecHead" id="sechd_structure"><a name="structure">Structure</a></div><div class="subSecContent" id="seccnt_structure"><p class="subSecExplanation"> JARs are just <em><a href="http://en.wikipedia.org/wiki/ZIP_(file_format)">ZIP files</a> with a .jar extension</em> and a special directory structure. Meta information is in a directory called <em><span class="idf">META-INF</span></em>, with the <em>manifest file <span class="idf">/META-INF/MANIFEST.MF</span></em> being the most important file. </p><p class="subSecExplanation"> Beside <span class="idf">META-INF</span>, you <em>add any file</em> you want to the JAR file. <em>Classes</em> must be put into the usual <a href="#" id="tl-d37368e624" class="dottedTooltip" onclick="return tlClick('tl-d37368e624','pp-d37368e629');" onmouseover="return tlOver('tl-d37368e624','pp-d37368e629');" onmouseout="return tlOut('tl-d37368e624','pp-d37368e629');"><em>Java directory structure</em></a>. <br/> This is an example layout for a JAR file, with a manifest file and two classes "com.jarfiller.example.MainClass" and "com.jarfiller.example.Helper":</p><pre class="subSecConsole">Content of jarfiller-example.jar
			
META-INF/                                  (directory)
META-INF/MANIFEST.MF                       (Manifest file)
com/                                       (directory)
com/jarfiller/                             (directory)
com/jarfiller/example/                     (directory)
com/jarfiller/example/MainClass.class      (Java class)
com/jarfiller/example/Helper.class         (Java class)
</pre></div></div><div class="subSecRow1" id="sec_manifest"><div class="subSecHead" id="sechd_manifest"><a name="manifest">Manifest</a></div><div class="subSecContent" id="seccnt_manifest"><p class="subSecExplanation">The manifest file (<span class="idf">/META-INF/MANIFEST.MF</span>) <em>describes the content</em> of the JAR file. It is <em>not required</em>, but often automatically added by JAR tools.<br/> The following manifest declares only a <a href="#" id="tl-d37368e657" class="dottedTooltip" onclick="return tlClick('tl-d37368e657','pp-d37368e533');" onmouseover="return tlOver('tl-d37368e657','pp-d37368e533');" onmouseout="return tlOut('tl-d37368e657','pp-d37368e533');">main class</a>: </p><pre class="subSecConfig"><a href="#" id="tl-d37368e661" class="tooltip" onclick="return tlClick('tl-d37368e661','pp-d37368e288');" onmouseover="return tlOver('tl-d37368e661','pp-d37368e288');" onmouseout="return tlOut('tl-d37368e661','pp-d37368e288');">Manifest-Version</a>: 1.0
<a href="#" id="tl-d37368e664" class="tooltip" onclick="return tlClick('tl-d37368e664','pp-d37368e297');" onmouseover="return tlOver('tl-d37368e664','pp-d37368e297');" onmouseout="return tlOut('tl-d37368e664','pp-d37368e297');">Main-Class</a>: com.jarfiller.example.MainClass
</pre><h4 class="subSecMiniHeadline">Rules for Manifest Files</h4><ul class="subSecList"><li>a manifest contains <em>key/value pairs</em> (<em>called <span class="idf">attributes</span></em>), one per line</li><li>attribute syntax: attribute <em>name</em>, directly followed by a <em>colon</em> (':'), a <a href="#" id="tl-d37368e692" class="dottedTooltip" onclick="return tlClick('tl-d37368e692','pp-d37368e696');" onmouseover="return tlOver('tl-d37368e692','pp-d37368e696');" onmouseout="return tlOut('tl-d37368e692','pp-d37368e696');"><em>single space</em></a> and the <em>value</em></li><li>values may span several lines. Each <em>additional line must start with one space</em>.</li><li><em>no additional whitespace</em> allowed (<a href="#" id="tl-d37368e715" class="dottedTooltip" onclick="return tlClick('tl-d37368e715','pp-d37368e715');" onmouseover="return tlOver('tl-d37368e715','pp-d37368e715');" onmouseout="return tlOut('tl-d37368e715','pp-d37368e715');">more</a>)</li><li><em>no empty lines</em> allowed in the main section (there can be <a href="#" id="tl-d37368e722" class="dottedTooltip" onclick="return tlClick('tl-d37368e722','pp-d37368e725');" onmouseover="return tlOver('tl-d37368e722','pp-d37368e725');" onmouseout="return tlOut('tl-d37368e722','pp-d37368e725');">additional sections</a>, separated by empty lines) </li></ul><h4 class="subSecMiniHeadline">Common Attributes</h4><div class="subSecTableDiv"><table><tr><th>Name</th><th>Description</th><th>Example</th></tr><tr><td>Manifest-Version</td><td>File format version of the manifest, always '1.0', required</td><td>1.0</td></tr><tr><td>Main-Class</td><td>Name of the class containing the <span class="idf">main</span> method in executable JARs</td><td>my.package.MainClass</td></tr><tr><td>Class-Path</td><td>Space-separated list of relative paths to JAR files and directories for the classpath</td><td>lib/util.jar lib/helper.jar drivers/</td></tr><tr><td>Sealed</td><td>if "true", then packages are <a href="#" id="tl-d37368e785" class="dottedTooltip" onclick="return tlClick('tl-d37368e785','pp-d37368e788');" onmouseover="return tlOver('tl-d37368e785','pp-d37368e788');" onmouseout="return tlOut('tl-d37368e785','pp-d37368e788');">sealed</a>. Otherwise "false".</td><td>true</td></tr><tr><td>Created-By</td><td>Creator of the JAR; automatically added by the <span class="idf">jar</span> tool; not important</td><td>1.6.0_12 (Sun Microsystems Inc.)</td></tr><tr><td>Implementation-Title</td><td>Name of the program/library contained in the JAR</td><td>My Super App</td></tr><tr><td>Implementation-Version</td><td>Version of the program/library contained in the JAR</td><td>1.0d</td></tr><tr><td>Implementation-Vendor</td><td>Vendor of the program/library contained in the JAR</td><td>Super Soft Inc.</td></tr><tr><td>Specification-Title</td><td>Name of the specification the library implements (<a href="#" id="tl-d37368e835" class="dottedTooltip" onclick="return tlClick('tl-d37368e835','pp-d37368e835');" onmouseover="return tlOver('tl-d37368e835','pp-d37368e835');" onmouseout="return tlOut('tl-d37368e835','pp-d37368e835');">more</a>)</td><td>Super API</td></tr><tr><td>Specification-Version</td><td>Version of the specification</td><td>1.0</td></tr><tr><td>Specification-Vendor</td><td>Vendor of the specification</td><td>Super Group</td></tr></table></div><p class="subSecExplanation">Beside those common attributes, there are many special purpose attributes. For example, if you package a Java Applet or a OSGi Bundle in a JAR, there are specific (and often required) attributes for them. For a simple library or executable JAR they are not needed though. </p><h4 class="subSecMiniHeadline">Example</h4><pre class="subSecConfig"><a href="#" id="tl-d37368e865" class="tooltip" onclick="return tlClick('tl-d37368e865','pp-d37368e288');" onmouseover="return tlOver('tl-d37368e865','pp-d37368e288');" onmouseout="return tlOut('tl-d37368e865','pp-d37368e288');">Manifest-Version</a>: 1.0
<a href="#" id="tl-d37368e868" class="tooltip" onclick="return tlClick('tl-d37368e868','pp-d37368e302');" onmouseover="return tlOver('tl-d37368e868','pp-d37368e302');" onmouseout="return tlOut('tl-d37368e868','pp-d37368e302');">Created-By</a>: 1.6.0_12 (Sun Microsystems Inc.)
<a href="#" id="tl-d37368e871" class="tooltip" onclick="return tlClick('tl-d37368e871','pp-d37368e329');" onmouseover="return tlOver('tl-d37368e871','pp-d37368e329');" onmouseout="return tlOut('tl-d37368e871','pp-d37368e329');">Class-Path</a>: lib/common.jar lib/helpers.jar lib/util-impl.jar stdlib/j2ee.jar stdlib/mail.jar
 drivers/mysql-jdbc.jar drivers/jag-ext.jar extensions/
<a href="#" id="tl-d37368e874" class="tooltip" onclick="return tlClick('tl-d37368e874','pp-d37368e338');" onmouseover="return tlOver('tl-d37368e874','pp-d37368e338');" onmouseout="return tlOut('tl-d37368e874','pp-d37368e338');">Implementation-Title</a>: Jarfiller Test App
<a href="#" id="tl-d37368e877" class="tooltip" onclick="return tlClick('tl-d37368e877','pp-d37368e348');" onmouseover="return tlOver('tl-d37368e877','pp-d37368e348');" onmouseout="return tlOut('tl-d37368e877','pp-d37368e348');">Implementation-Version</a>: 0.1
<a href="#" id="tl-d37368e880" class="tooltip" onclick="return tlClick('tl-d37368e880','pp-d37368e358');" onmouseover="return tlOver('tl-d37368e880','pp-d37368e358');" onmouseout="return tlOut('tl-d37368e880','pp-d37368e358');">Implementation-Vendor</a>: jarfiller.org
</pre><p class="subSecExplanation"/></div></div><div class="subSecRow2" id="sec_jartool"><div class="subSecHead" id="sechd_jartool"><a name="jartool">jar tool</a></div><div class="subSecContent" id="seccnt_jartool"><p class="subSecExplanation"> The JDK ships with a command line tool called <span class="idf">jar</span> to <em>create, view and unpack JAR files</em>. On Windows, use it like this:</p><pre class="subSecConsole">C:\Users\tim&gt;<a href="#" id="tl-d37368e903" class="dottedTooltip" onclick="return tlClick('tl-d37368e903','pp-d37368e907');" onmouseover="return tlOver('tl-d37368e903','pp-d37368e907');" onmouseout="return tlOut('tl-d37368e903','pp-d37368e907');">set PATH=c:\Program Files\Java\jdk1.6.0_13\bin;%PATH%</a>
			
C:\Users\tim&gt;jar
Usage: jar {ctxui}[vfm0Me] [jar-file] [manifest-file] [entry-point] [-C dir] files ...
...
			</pre><p class="subSecExplanation">To <em>create a JAR file</em> from your compiled classes, enter:</p><pre class="subSecConsole">C:\Users\tim&gt;jar <a href="#" id="tl-d37368e940" class="dottedTooltip" onclick="return tlClick('tl-d37368e940','pp-d37368e945');" onmouseover="return tlOver('tl-d37368e940','pp-d37368e945');" onmouseout="return tlOut('tl-d37368e940','pp-d37368e945');">cvf</a> <a href="#" id="tl-d37368e965" class="dottedTooltip" onclick="return tlClick('tl-d37368e965','pp-d37368e970');" onmouseover="return tlOver('tl-d37368e965','pp-d37368e970');" onmouseout="return tlOut('tl-d37368e965','pp-d37368e970');">tmp/jarfiller-example.jar</a> <a href="#" id="tl-d37368e974" class="dottedTooltip" onclick="return tlClick('tl-d37368e974','pp-d37368e979');" onmouseover="return tlOver('tl-d37368e974','pp-d37368e979');" onmouseout="return tlOut('tl-d37368e974','pp-d37368e979');">-C workspace/JarTest/bin .</a>
<a href="#" id="tl-d37368e997" class="dottedTooltip" onclick="return tlClick('tl-d37368e997','pp-d37368e1002');" onmouseover="return tlOver('tl-d37368e997','pp-d37368e1002');" onmouseout="return tlOut('tl-d37368e997','pp-d37368e1002');">added manifest</a>
adding: com/(in = 0) (out= 0)(stored 0%)
adding: com/jarfiller/(in = 0) (out= 0)(stored 0%)
adding: com/jarfiller/example/(in = 0) (out= 0)(stored 0%)
adding: com/jarfiller/example/Helper.class(in = 287) (out= 212)(deflated 26%)
adding: com/jarfiller/example/MainClass.class(in = 569) (out= 351)(deflated 38%)
</pre><p class="subSecExplanation">To <em>specify a manifest file</em>, either put it into the base directory (would be <span class="idf">workspace/JarTest/bin/META-INF/MANIFEST.MF</span>), or <em>use the 'm' parameter</em>:</p><pre class="subSecConsole">C:\Users\tim&gt;jar <a href="#" id="tl-d37368e1025" class="dottedTooltip" onclick="return tlClick('tl-d37368e1025','pp-d37368e1030');" onmouseover="return tlOver('tl-d37368e1025','pp-d37368e1030');" onmouseout="return tlOut('tl-d37368e1025','pp-d37368e1030');">cvfm</a> <a href="#" id="tl-d37368e1055" class="dottedTooltip" onclick="return tlClick('tl-d37368e1055','pp-d37368e1060');" onmouseover="return tlOver('tl-d37368e1055','pp-d37368e1060');" onmouseout="return tlOut('tl-d37368e1055','pp-d37368e1060');">tmp/jarfiller-example.jar</a> <a href="#" id="tl-d37368e1064" class="dottedTooltip" onclick="return tlClick('tl-d37368e1064','pp-d37368e1069');" onmouseover="return tlOver('tl-d37368e1064','pp-d37368e1069');" onmouseout="return tlOut('tl-d37368e1064','pp-d37368e1069');">workspace/JarTest/manifest/MANIFEST.MF</a> <a href="#" id="tl-d37368e1073" class="dottedTooltip" onclick="return tlClick('tl-d37368e1073','pp-d37368e1078');" onmouseover="return tlOver('tl-d37368e1073','pp-d37368e1078');" onmouseout="return tlOut('tl-d37368e1073','pp-d37368e1078');">^</a>
      <a href="#" id="tl-d37368e1082" class="dottedTooltip" onclick="return tlClick('tl-d37368e1082','pp-d37368e1087');" onmouseover="return tlOver('tl-d37368e1082','pp-d37368e1087');" onmouseout="return tlOut('tl-d37368e1082','pp-d37368e1087');">-C workspace/JarTest/bin .</a>
<a href="#" id="tl-d37368e1106" class="dottedTooltip" onclick="return tlClick('tl-d37368e1106','pp-d37368e1111');" onmouseover="return tlOver('tl-d37368e1106','pp-d37368e1111');" onmouseout="return tlOut('tl-d37368e1106','pp-d37368e1111');">added manifest</a>
adding: com/(in = 0) (out= 0)(stored 0%)
adding: com/jarfiller/(in = 0) (out= 0)(stored 0%)
adding: com/jarfiller/example/(in = 0) (out= 0)(stored 0%)
adding: com/jarfiller/example/Helper.class(in = 287) (out= 212)(deflated 26%)
adding: com/jarfiller/example/Helper.java(in = 56) (out= 58)(deflated -3%)
adding: com/jarfiller/example/MainClass.class(in = 569) (out= 351)(deflated 38%)
adding: com/jarfiller/example/MainClass.java(in = 147) (out= 127)(deflated 13%)
</pre></div></div><div class="yahbar"><div class="yahprev"><a href="overview.xhtml">Prev<br/><span>Overview</span></a></div><div class="yahhere"><a href="#" onclick="return navToggle();">Java Basics: JAR Files / Creating JARs</a><br/><a href="/javabasics/jar/"><span>Single Page Mode</span></a>, <a href="#" onclick="return navToggle();"><span>Show Table of Content</span></a></div><div class="yahnext"><a href="executables.xhtml">Next<br/><span>How to Start an Executable JAR</span></a></div></div></div><div id="sidecolumn">
  	  	<div><h3>Useful Links</h3><div class="sidecolumnSubTitleLine"/>
  			<a href="http://java.sun.com/javase/6/docs/technotes/guides/jar/index.html">Java Documentation</a><br/>
  			<a href="http://java.sun.com/javase/6/docs/technotes/guides/jar/jar.html">JAR File Specification</a><br/>
  			<a href="http://en.wikipedia.org/wiki/JAR_(file_format)">JAR on Wikipedia</a><br/>
  		</div>
  </div></div></div><div id="footer"><div id="footer-content"><div id="footer-left"><div class="footerLine"><a href="/">Home</a> - <a href="/about">About Jarfiller</a> - <a href="/imprint.xhtml">Imprint</a></div><div class="footerLine">Please send feedback and corrections to <a href="mailto:tim@tjansen.de">tim@<span style="display: none">got you</span>tjansen.de</a>.</div><div class="footerLine"><a href="http://www.twitter.com/timjansen">Follow</a> me on Twitter.</div><div class="copyrightLine">© 2010 Tim Jansen; content licensed under <a href="http://creativecommons.org/licenses/by/3.0/us/">cc-by</a>; example source code is public domain
				</div></div><div id="footer-right"><a rel="license" href="http://creativecommons.org/licenses/by/3.0/us/"><img alt="Creative Commons License" style="border-width:0" src="../../images/ext/cc-by-88x31.png"/></a></div></div></div><div id="navbar" onclick="return navToggle();" onmouseover="document.getElementById('navbar').className='mouseover';" onmouseout="document.getElementById('navbar').className='';"/><div id="navcontainer"><div id="navlinks"><div id="navclosebar"><a href="#" onclick="return navClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="navpositionbar" class="navpositionbar"/><h2 id="navtitle">Java Basics: JAR Files</h2><a id="nav_overview" class="navseclink" href="overview.xhtml#overview">Overview</a><a id="nav_intro" class="navsublink" href="overview.xhtml#intro">Intro</a><a id="nav_usecases" class="navsublink" href="overview.xhtml#usecases">When to use JARs</a><a id="nav_requirements" class="navsublink" href="overview.xhtml#requirements">Requirements</a><a id="nav_creatingjars" class="navseclink" href="#creatingjars" onclick="if (event.button == 0) return goTo('#creatingjars', true); else return true;">Creating JARs</a><a id="nav_structure" class="navsublink" href="#structure" onclick="if (event.button == 0) return goTo('#structure', true); else return true;">Structure</a><a id="nav_manifest" class="navsublink" href="#manifest" onclick="if (event.button == 0) return goTo('#manifest', true); else return true;">Manifest</a><a id="nav_jartool" class="navsublink" href="#jartool" onclick="if (event.button == 0) return goTo('#jartool', true); else return true;">jar tool</a><span class="navseclink">How to...</span><a id="nav_executables" class="navsublink" href="executables.xhtml#executables">How to Start an Executable JAR</a><a id="nav_viewextract" class="navsublink" href="viewextract.xhtml#viewextract">How to View and Extract a JAR</a><a id="nav_libraries" class="navsublink" href="libraries.xhtml#libraries">How to Add Libraries to a JAR</a><a id="nav_selfsigning" class="navsublink" href="selfsigning.xhtml#selfsigning">How to Create a (Self-)Signed Jar</a><a id="nav_certification" class="navsublink" href="certification.xhtml#certification">How to Sign a Jar with a Valid Certificate</a><a id="nav_perentry" class="navsublink" href="perentry.xhtml#perentry">How to Specify Attributes For Single Packages (Per-Entry Attributes)</a><a id="nav_sealing" class="navsublink" href="sealing.xhtml#sealing">How to Seal Packages in a JAR</a><a id="nav_jarmetadata" class="navsublink" href="jarmetadata.xhtml#jarmetadata">How to Get Package Versioning Information</a><a id="nav_eclipse" class="navsublink" href="eclipse.xhtml#eclipse">How to Create JARs with Eclipse</a><a id="nav_ant" class="navsublink" href="ant.xhtml#ant">How to Create JARs with Ant</a></div></div><div id="popups"><div id="pp-d37368e715" class="tooltip">The manifest file's syntax is very rigid. Unlike most other text formats, it will not ignore additional whitespace, but rather handle it as part of the attribute name or value. This can cause errors which are hard to find (because you can't easily see your mistake in the text editor), so be careful.</div><div id="pp-d37368e835" class="tooltip">Some libraries don't have their own API, but implement a API defined by someone else. Then they can specify the API's title, version and vendor here.</div><div id="pp-d37368e629" class="tooltip">For example, if you have a class in a package "com.jarfiller.example", you must create "com/jarfiller/example" and put the class in there, otherwise it won't be found. Classes without packages must be put at the JAR's root.</div><div id="pp-d37368e696" class="tooltip">There must be <em>exactly one</em> space between the colon and the value. No other spaces are allowed in the line, unless they are part of the value. Spaces in front of the colon are not allowed (or, rather, they would be part of the attribute name then).</div><div id="pp-d37368e725" class="tooltip">Shown here are the <span class="idf">main attributes</span> of the manifest. The main attributes can be followed by <span class="idf">per-entry attributes</span>, which would then be separated by empty lines from each other. Usually you don't need to worry about that. Per-entry attributes are practically only used for signed JARs, and their entries will be automatically generated by the <span class="idf">jarsigner</span> tool.</div><div id="pp-d37368e788" class="tooltip">"Sealed" means that a package contained in this JAR must not have any files in other parts of the classpath. This can be important for security-reasons, when untrusted code is loaded, or to guarantee the consistency of a package.</div><div id="pp-d37368e907" class="tooltip"> This statement puts all executables, including the <span class="idf">jar</span> tool, of the JDK into the <span class="idf">PATH</span>. This means that you can execute them from the command line without having to specify the full path, no matter what your current directory is. Alternatively you can also edit the <span class="idf">system environment variables</span> and put the directory in there. Then the PATH is permanently changed (you need to restart your command line though). <br/> The equivalent for Unix/Linux systems would be:<br/> <span class="plainCode">export PATH=/usr/java/bin:$PATH</span><br/> <strong class="warn">Don't forget to adjust the directory - it needs to point to your JDK installation!</strong> </div><div id="pp-d37368e945" class="tooltip"><span class="idf">cvf</span> stands for:<br/><span class="idf">create</span> - create a new JAR<br/><span class="idf">verbose</span> - prints more output<br/><span class="idf">file</span> - specify the JAR's file name<br/></div><div id="pp-d37368e970" class="tooltip">The name of the JAR to create. Required because of the 'f' in 'cvf'. Without the 'f', it would print the file to the standard output, which is rarely what you want.</div><div id="pp-d37368e979" class="tooltip">With <span class="idf">-C</span> you can specify the directory where your files reside (here: <span class="idf">workspace/JarTest/bin</span>). This is important if you don't add files from your current directory, because then <span class="idf">jar</span> would not get the directory structure right.<br/> Following <span class="idf">-c basedir</span> is usually a list of files and directories to add. Here, we add the whole directory, represented by the single dot (".").</div><div id="pp-d37368e1002" class="tooltip">As the <span class="idf">jar</span> tool did not find a manifest in the directory, it created one and added it.</div><div id="pp-d37368e1030" class="tooltip"><span class="idf">cvfm</span> stands for:<br/><span class="idf">create</span> - create a new JAR<br/><span class="idf">verbose</span> - prints more output<br/> <span class="idf">file</span> - specify the JAR's file name<br/><span class="idf">manifest</span> - specify the manifest<br/></div><div id="pp-d37368e1060" class="tooltip">The name of the JAR to create. Required because of the 'f' in 'cvfm'. Without the 'f', it would print the file to the standard output, which is rarely what you want.</div><div id="pp-d37368e1069" class="tooltip">The path of the manifest file (required because of the the 'm' in 'cvfm').</div><div id="pp-d37368e1078" class="tooltip">The caret ('^') character at the end of the line means that it is continued in the next line. It is similar to the backslash ('\') in Unix-like shells.</div><div id="pp-d37368e1087" class="tooltip">With <span class="idf">-C</span> you can specify the directory where your files reside (here: <span class="idf">workspace/JarTest/bin</span>). This is important if you don't add files from your current directory, because then <span class="idf">jar</span> would not get the directory structure right.<br/> Following <span class="idf">-c basedir</span> is usually a list of files and directories to add. Here, we add the whole directory, represented by the single dot (".").</div><div id="pp-d37368e1111" class="tooltip">This line means that <span class="idf">jar</span> added the manifest that you specified.</div><div id="pp-d37368e288" class="tooltip">Every <span class="idf">MANIFEST.MF</span> file is required to start with the <span class="idf">Manifest-Version</span>. It describes the file format version of the file. Currently it is always "1.0".</div><div id="pp-d37368e297" class="tooltip"><span class="idf">Main-Class</span> specifies the name of the main class. A JAR file is only executable if it has this attribute.</div><div id="pp-d37368e302" class="tooltip"><span class="idf">Created-By</span> identifies the tool that created the file. Usually added by the <span class="idf">jar</span> tool.</div><div id="pp-d37368e329" class="tooltip"><span class="idf">Class-Path</span> is a space-separated list of relative paths to additional JAR files and directories. They will be automatically put into the class path. Directories must end with a slash ('/'). A typical application is for executable JARs that need additional libraries to put them into the <span class="idf">Class-Path</span>.</div><div id="pp-d37368e338" class="tooltip"><span class="idf">Implementation-Title</span> can be used to specify the name of the program or library.<br/> <span class="idf">Implementation-Title</span> can either be used in the main section, as the default for the whole JAR, or as per-entry attribute.</div><div id="pp-d37368e348" class="tooltip"><span class="idf">Implementation-Version</span> can be used to specify the version of the program or library. No special format is needed, any string is allowed.<br/> <span class="idf">Implementation-Version</span> can either be used in the main section, as the default for the whole JAR, or as per-entry attribute.</div><div id="pp-d37368e358" class="tooltip"><span class="idf">Implementation-Vendor</span> can specify the vendor of the program or library.<br/> <span class="idf">Implementation-Vendor</span> can either be used in the main section, as the default for the whole JAR, or as per-entry attribute.</div><div id="ttCloseBar" class="closeBar"><a href="#" onclick="return tlClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="topicCloseBar" class="closeBar"><a href="#" onclick="return tpcClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div></div></body></html>