<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:page="http://tjansen.de/refPage" xmlns:i="http://tjansen.de/internal"><head><title>Advanced Regular Expressions - Java Basics: Regular Expressions</title><meta http-equiv="X-UA-Compatible" content="chrome=1"/><meta http-equiv="content-language" content="en"/><link rel="shortcut icon" href="../../images/favicon.png" type="image/png"/><link rel="stylesheet" type="text/css" href="../../style/style.css"/><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6791190-2']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script><script type="text/javascript" src="../../js/all.js"/></head><body id="body"><div id="visibleContent"><div id="top"><a href="/"><img src="../../images/titlebar.png" alt="Jarfiller.com"/></a></div><div id="main"><div id="bodycolumn"><div class="yahbar"><div class="yahprev"><a href="using.xhtml">Prev</a></div><h3 class="yahhere"><a href="#" onclick="return navToggle();">Java Basics: Regular Expressions / Advanced Regular Expressions</a></h3></div><h1 id="sec_advanced" class="multipageTitle"><a name="advanced">Advanced Regular Expressions</a></h1><div class="subSecRow2" id="sec_greedy"><div class="subSecHead" id="sechd_greedy"><a name="greedy">Greedy / Non-Greedy Quantifier</a></div><div class="subSecContent" id="seccnt_greedy"><p class="subSecExplanation">Regular expression <a href="#" id="tl-d39088e2051" class="dottedTooltip" onclick="return tlClick('tl-d39088e2051','pp-d39088e2054');" onmouseover="return tlOver('tl-d39088e2051','pp-d39088e2054');" onmouseout="return tlOut('tl-d39088e2051','pp-d39088e2054');">quantifiers</a> are <em>greedy by default</em>. This means that each quantifier tries to get as many repetitions as possible. As the regular expression is executed from left to right, this means that the first quantifiers may get more repetitions than the following ones. In some situations, this is not desirable, and that's what non-greedy quantifiers are for. They try to match <em>as few repetitions as possible</em> while still fulfilling the pattern as a whole.<br/> In order to get a non-greedy quantifier, just append a "?", e.g. write "*?" instead of just "*".</p><pre class="subSecCode"><code>String a = "a,b,c";
<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Matcher.html" class="javadoc">Matcher</a> m1 = <a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html" class="javadoc">Pattern</a>.<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html#compile(java.lang.String)" class="javadoc">compile</a>("(.<em>*</em>),(.<em>*</em>)").<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html#matcher(java.lang.CharSequence)" class="javadoc">matcher</a>(a);     <span class="cmt">// greedy quantifiers</span>
if (m1.<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Matcher.html#matches()" class="javadoc">matches</a>())
    System.out.println(m1.<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Matcher.html#group(int)" class="javadoc">group</a>(1) + " " + m1.<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Matcher.html#group(int)" class="javadoc">group</a>(2));  <span class="cmt">// prints "<em>a,b c</em>"</span>

<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Matcher.html" class="javadoc">Matcher</a> m2 = <a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html" class="javadoc">Pattern</a>.<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html#compile(java.lang.String)" class="javadoc">compile</a>("(.<em>*?</em>),(.<em>*?</em>)").<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html#matcher(java.lang.CharSequence)" class="javadoc">matcher</a>(a);   <span class="cmt">// non-greedy quantifiers</span>
if (m2.<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Matcher.html#matches()" class="javadoc">matches</a>())
    System.out.println(m2.<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Matcher.html#group(int)" class="javadoc">group</a>(1) + " " + m2.<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Matcher.html#group(int)" class="javadoc">group</a>(2));  <span class="cmt">// prints "<em>a b,c</em>"</span>
</code></pre></div></div><div class="subSecRow1" id="sec_lookaround"><div class="subSecHead" id="sechd_lookaround"><a name="lookaround">Lookaround</a></div><div class="subSecContent" id="seccnt_lookaround"><p class="subSecExplanation"><em>Lookahead assertions</em> allow you to state that a pattern only <em>matches if it is followed by another sub-pattern</em>. This sub-pattern itself is <em>not part of the actual match</em> though.</p><pre class="subSecCode"><code>String a = "ab ac ad";
String b = "pineapple";
assert a.replaceAll("a(?=c)", "X").equals("ab Xc ad");   <span class="cmt">// Match "a" <em>followed by "c"</em> (<a href="#" id="tl-d39088e2193" class="dottedTooltip" onclick="return tlClick('tl-d39088e2193','pp-d39088e2193');" onmouseover="return tlOver('tl-d39088e2193','pp-d39088e2193');" onmouseout="return tlOut('tl-d39088e2193','pp-d39088e2193');">more</a>)</span>
assert a.replaceAll("a(?!c)", "X").equals("Xb ac Xd");   <span class="cmt">// Match "a" <em>not followed by "c"</em> (<a href="#" id="tl-d39088e2205" class="dottedTooltip" onclick="return tlClick('tl-d39088e2205','pp-d39088e2205');" onmouseover="return tlOver('tl-d39088e2205','pp-d39088e2205');" onmouseout="return tlOut('tl-d39088e2205','pp-d39088e2205');">more</a>)</span>
assert b.replaceAll("[a-z](?=[eip])", "X").equals("XiXeXXpXe");
assert b.replaceAll("[a-z](?![eip])", "X").equals("pXnXapXlX");
assert "5".replaceFirst("^(?=\\d$)", "0").equals("05");  <span class="cmt">// prepend 0 to single-digit strings</span>

<span class="cmt">// Lookahead can be everywhere in the pattern (<a href="#" id="tl-d39088e2230" class="dottedTooltip" onclick="return tlClick('tl-d39088e2230','pp-d39088e2230');" onmouseover="return tlOver('tl-d39088e2230','pp-d39088e2230');" onmouseout="return tlOut('tl-d39088e2230','pp-d39088e2230');">more</a>):</span>
assert b.replaceAll("[a-z](?=[eip])[a-e]", "X").equals("piXappX""); 
</code></pre><p class="subSecExplanation">Similar to lookahead assertions, <em>lookbehind assertions</em> allow you to state a sub-pattern that must be in front of the main pattern. The sub-pattern itself is not part of the match.</p><pre class="subSecCode"><code>String a = "ba ca da";
assert a.replaceAll("(?&lt;=c)a", "X").equals("ba cX da");   <span class="cmt">// Match "a" <em>following "c"</em> (<a href="#" id="tl-d39088e2256" class="dottedTooltip" onclick="return tlClick('tl-d39088e2256','pp-d39088e2256');" onmouseover="return tlOver('tl-d39088e2256','pp-d39088e2256');" onmouseout="return tlOut('tl-d39088e2256','pp-d39088e2256');">more</a>)</span>
assert a.replaceAll("(?&lt;!c)a", "X").equals("bX ca dX");   <span class="cmt">// Match "a" <em>not following "c"</em> (<a href="#" id="tl-d39088e2268" class="dottedTooltip" onclick="return tlClick('tl-d39088e2268','pp-d39088e2268');" onmouseover="return tlOver('tl-d39088e2268','pp-d39088e2268');" onmouseout="return tlOut('tl-d39088e2268','pp-d39088e2268');">more</a>)</span>
</code></pre><p class="subSecExplanation">You can find more information on lookahead and lookbehind in the <a href="http://www.regular-expressions.info/lookaround.html">Regex Tutorial</a>.</p></div></div><div class="yahbar"><div class="yahprev"><a href="using.xhtml">Prev<br/><span>Using Regular Expressions</span></a></div><div class="yahhere"><a href="#" onclick="return navToggle();">Java Basics: Regular Expressions / Advanced Regular Expressions</a><br/><a href="/javabasics/regexp/"><span>Single Page Mode</span></a>, <a href="#" onclick="return navToggle();"><span>Show Table of Content</span></a></div></div></div><div id="sidecolumn">
  	  	<div><h3>Useful Links</h3><div class="sidecolumnSubTitleLine"/>
  			<a href="http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html#sum">Regular expression summary (Java Documentation)</a><br/>
  			<a href="http://en.wikipedia.org/wiki/Regular_expression">Regular expressions on Wikipedia</a><br/>
  		</div>
  </div></div></div><div id="footer"><div id="footer-content"><div id="footer-left"><div class="footerLine"><a href="/">Home</a> - <a href="/about">About Jarfiller</a> - <a href="/imprint.xhtml">Imprint</a></div><div class="footerLine">Please send feedback and corrections to <a href="mailto:tim@tjansen.de">tim@<span style="display: none">got you</span>tjansen.de</a>.</div><div class="footerLine"><a href="http://www.twitter.com/timjansen">Follow</a> me on Twitter.</div><div class="copyrightLine">Â© 2010 Tim Jansen; content licensed under <a href="http://creativecommons.org/licenses/by/3.0/us/">cc-by</a>; example source code is public domain
				</div></div><div id="footer-right"><a rel="license" href="http://creativecommons.org/licenses/by/3.0/us/"><img alt="Creative Commons License" style="border-width:0" src="../../images/ext/cc-by-88x31.png"/></a></div></div></div><div id="navbar" onclick="return navToggle();" onmouseover="document.getElementById('navbar').className='mouseover';" onmouseout="document.getElementById('navbar').className='';"/><div id="navcontainer"><div id="navlinks"><div id="navclosebar"><a href="#" onclick="return navClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="navpositionbar" class="navpositionbar"/><h2 id="navtitle">Java Basics: Regular Expressions</h2><a id="nav_overview" class="navseclink" href="overview.xhtml#overview">Overview</a><a id="nav_intro" class="navsublink" href="overview.xhtml#intro">Intro</a><a id="nav_usecases" class="navsublink" href="overview.xhtml#usecases">When to use regular expressions?</a><a id="nav_requirements" class="navsublink" href="overview.xhtml#requirements">Requirements</a><a id="nav_assert" class="navsublink" href="overview.xhtml#assert">Assert</a><a id="nav_regularexpressions" class="navseclink" href="regularexpressions.xhtml#regularexpressions">Regular Expressions</a><a id="nav_plainstrings" class="navsublink" href="regularexpressions.xhtml#plainstrings">Plain Strings</a><a id="nav_groupsandor" class="navsublink" href="regularexpressions.xhtml#groupsandor">Groups and Or</a><a id="nav_characterclasses" class="navsublink" href="regularexpressions.xhtml#characterclasses">Character Classes</a><a id="nav_quantifiers" class="navsublink" href="regularexpressions.xhtml#quantifiers">Quantifiers</a><a id="nav_anchors" class="navsublink" href="regularexpressions.xhtml#anchors">Anchors</a><a id="nav_flags" class="navsublink" href="regularexpressions.xhtml#flags">Flags</a><a id="nav_backreferences" class="navsublink" href="regularexpressions.xhtml#backreferences">Back references</a><a id="nav_using" class="navseclink" href="using.xhtml#using">Using Regular Expressions</a><a id="nav_simplematching" class="navsublink" href="using.xhtml#simplematching">Simple Matching</a><a id="nav_finding" class="navsublink" href="using.xhtml#finding">Finding and Parsing</a><a id="nav_replacing" class="navsublink" href="using.xhtml#replacing">Simple Replacing</a><a id="nav_complrexreplacing" class="navsublink" href="using.xhtml#complrexreplacing">Complex Replacements</a><a id="nav_splitting" class="navsublink" href="using.xhtml#splitting">Splitting</a><a id="nav_patternflags" class="navsublink" href="using.xhtml#patternflags">Pattern Flags</a><a id="nav_advanced" class="navseclink" href="#advanced" onclick="if (event.button == 0) return goTo('#advanced', true); else return true;">Advanced Regular Expressions</a><a id="nav_greedy" class="navsublink" href="#greedy" onclick="if (event.button == 0) return goTo('#greedy', true); else return true;">Greedy / Non-Greedy Quantifier</a><a id="nav_lookaround" class="navsublink" href="#lookaround" onclick="if (event.button == 0) return goTo('#lookaround', true); else return true;">Lookaround</a></div></div><div id="popups"><div id="pp-d39088e2193" class="tooltip"><span class="idf">(?=c)</span> specifies that the pattern will only match if the preceding part of the pattern is followed by "c". Instead of "c" you could use any other regular expression. Note that the lookahead part is not part of the match, and thus it won't be replaced.</div><div id="pp-d39088e2205" class="tooltip"><span class="idf">(?!c)</span> is the opposite of <span class="idf">(?=c)</span>: it matches only if the sub-pattern is not following the main pattern "a". As with other lookaheads, the lookahead is not part of the match.</div><div id="pp-d39088e2230" class="tooltip">The lookahead can be everywhere in the pattern, not only at the end of the string. It usually does not make sense to do this though, as the lookahead part will then be part of the match. In this example, only the letter 'e' matches both the lookahead and the last character class of the pattern.</div><div id="pp-d39088e2256" class="tooltip"><span class="idf">(?&lt;=c)</span> specifies that the pattern will only match if the following part of the pattern is preceded by "c". Instead of "c" you could use any other regular expression. Note that the lookbehind part is not part of the match, and thus it won't be replaced.</div><div id="pp-d39088e2268" class="tooltip"><span class="idf">(?&lt;!c)</span> is the opposite of <span class="idf">(?&lt;=c)</span>: it matches only if the sub-pattern is not preceding the main pattern "a". As with other lookarounds, the lookbehind is not part of the match.</div><div id="pp-d39088e2054" class="tooltip">Quantifiers are operators such as "*", "+" and "?", which specify the number of repetition of the preceding character or group.</div><div id="ttCloseBar" class="closeBar"><a href="#" onclick="return tlClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="topicCloseBar" class="closeBar"><a href="#" onclick="return tpcClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div></div></body></html>