<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:page="http://tjansen.de/refPage" xmlns:i="http://tjansen.de/internal"><head><title>Sequences - JavaFX Script Reference</title><meta http-equiv="X-UA-Compatible" content="chrome=1"/><meta http-equiv="content-language" content="en"/><link rel="shortcut icon" href="../../images/favicon.png" type="image/png"/><link rel="stylesheet" type="text/css" href="../../style/style.css"/><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-6791190-2']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script><script type="text/javascript" src="../../js/all.js"/></head><body id="body"><div id="visibleContent"><div id="top"><a href="/"><img src="../../images/titlebar.png" alt="Jarfiller.com"/></a></div><div id="main"><div id="bodycolumn"><div class="yahbar"><div class="yahprev"><a href="basictypes.xhtml">Prev</a></div><h3 class="yahhere"><a href="#" onclick="return navToggle();">JavaFX Script Reference / Sequences</a></h3><div class="yahnext"><a href="conditionalsandloops.xhtml">Next</a></div></div><h1 id="sec_sequences" class="multipageTitle"><a name="sequences">Sequences</a></h1><div class="subSecRow1" id="sec_creatingseqs"><div class="subSecHead" id="sechd_creatingseqs"><a name="creatingseqs">Creating sequences</a><br/>(<a href="#" id="tl-d39688e1028" class="dottedTooltip" onclick="return tlClick('tl-d39688e1028','pp-d39688e1033');" onmouseover="return tlOver('tl-d39688e1028','pp-d39688e1033');" onmouseout="return tlOut('tl-d39688e1028','pp-d39688e1033');">more</a>)
		</div><div class="subSecContent" id="seccnt_creatingseqs"><pre class="subSecCode"><code>def a = <em>[10, 20, 30, 40, 50]</em>;                        <span class="cmt">// sequence of integers</span>
def b = [35, 1.2, "foo", null, false];               <span class="cmt">// mixed types</span>
def c : <em>String[]</em> = ["a", "b", "c"];                  <span class="cmt">// explicit type</span>
def d : <em>Object[]</em> = [1, "a", null, 2.2, true];        <span class="cmt">// Object can contain everything</span>
def e : Object[] = <em>null</em>; assert(e == <em>[]</em>);
assert(<em>[] == null</em>);                                  <span class="cmt">// null is empty</span>
assert(<em>sizeof a</em> == 5);                               <span class="cmt">// sequence length</span>
assert(a == [<em>5+5</em>, 4*5, 60/2, 50-10, 10*5]);          <span class="cmt">// embedded expressions</span>
assert(<em>[1, [2, 3, []], [4, 5]]</em> == [1, 2, 3, 4, 5]);  <span class="cmt">// flattening (<a href="#" id="tl-d39688e1108" class="dottedTooltip" onclick="return tlClick('tl-d39688e1108','pp-d39688e1108');" onmouseover="return tlOver('tl-d39688e1108','pp-d39688e1108');" onmouseout="return tlOut('tl-d39688e1108','pp-d39688e1108');">more</a>)</span>

assert(<em>[1..3]</em> == [1, 2, 3]);                         <span class="cmt">// range</span>
assert([1..6 <em>step 2</em>] == [1, 3, 5]);                  <span class="cmt">// range with step</span>
assert([4..2 step <em>-1</em>] == [4, 3, 2]);                 <span class="cmt">// negative step</span>

assert(<em>reverse</em> [1, 5, 10] == [10, 5, 1]);            <span class="cmt">// reverse a sequence</span>
assert(reverse [1..3] == [3..1 step -1]);
</code></pre></div></div><div class="subSecRow2" id="sec_seqreadbyslice"><div class="subSecHead" id="sechd_seqreadbyslice"><a name="seqreadbyslice">Reading by index / slice</a><br/>(<a href="#" id="tl-d39688e1153" class="dottedTooltip" onclick="return tlClick('tl-d39688e1153','pp-d39688e1158');" onmouseover="return tlOver('tl-d39688e1153','pp-d39688e1158');" onmouseout="return tlOut('tl-d39688e1153','pp-d39688e1158');">more</a>)
		</div><div class="subSecContent" id="seccnt_seqreadbyslice"><pre class="subSecCode"><code>def a = [10, 20, 30, 40, 50];
assert(a<em>[1]</em> == 20);                  <span class="cmt">// read single element</span>
assert(a[7] == <em>0</em>);                   <span class="cmt">// default value if index does not exist</span>
assert(a<em>[1..3]</em> == [20, 30, 40]);     <span class="cmt">// slicing (inclusive)</span>
assert(a[1<em>..&lt;</em>3] == [20, 30]);        <span class="cmt">// slicing (exclusive)</span>
assert(a[<em>1..</em>] == [20, 30, 40, 50]);  <span class="cmt">// end is optional (inclusive)</span>
assert(a[<em>1..&lt;</em>] == [20, 30, 40]);     <span class="cmt">// end is optional (exclusive)</span>
assert(a == [ a[0..1], a[2..] ]);
</code></pre></div></div><div class="subSecRow1" id="sec_seqwriteindexslice"><div class="subSecHead" id="sechd_seqwriteindexslice"><a name="seqwriteindexslice">Writing by index / slice</a><br/>(<a href="#" id="tl-d39688e1223" class="dottedTooltip" onclick="return tlClick('tl-d39688e1223','pp-d39688e1228');" onmouseover="return tlOver('tl-d39688e1223','pp-d39688e1228');" onmouseout="return tlOut('tl-d39688e1223','pp-d39688e1228');">more</a>)
		</div><div class="subSecContent" id="seccnt_seqwriteindexslice"><pre class="subSecCode"><code>var a = ["a", "b", "c", "d"];
a<em>[1]</em> = "BBB"; assert(a == ["a", "BBB", "c", "d"]);  <span class="cmt">// replace member</span>
<em>a[4] = "d";</em> assert(a == ["a", "BBB", "c", "d"]);    <span class="cmt">// <strong class="warn">does nothing</strong> (index too large)</span>
<span class="strike">a[4] = ["d"];</span>                                       <span class="cmt">// assigning a sequence not allowed</span>

def b = ["a", "b", "c", "d"];
b<em>[1..1]</em> = ["b1", "b2", "b3"];                       <span class="cmt">// replace slice</span>
assert(b == ["a", "b1", "b2", "b3", "c", "d"]);

def c = ["a", "b", "c", "d"];
<em>c[0..&lt;2] = [];</em> assert(c == ["c", "d"]);             <span class="cmt">// delete slice</span>
<em>c[-1..-1]</em> = ["a", "b"];  assert(c == ["c", "d"]);   <span class="cmt">// <strong class="warn">does nothing</strong></span>

def d = ["c", "d"];
d<em>[0..0]</em> = ["a", "b", d[0]];                         <span class="cmt">// better use <span class="idf">insert</span> statement</span>
assert(d == ["a", "b", "c", "d"]);

def e = ["a", "b", "c", "d"];
e<em>[4..4]</em> = ["e"];                                    <span class="cmt">// append (better use <span class="idf">insert</span> statement)</span>
assert(e == ["a", "b", "c", "d", "e"]);
</code></pre></div></div><div class="subSecRow2" id="sec_seqselect"><div class="subSecHead" id="sechd_seqselect"><a name="seqselect">Sequence Select Clause</a><br/>(<a href="#" id="tl-d39688e1338" class="dottedTooltip" onclick="return tlClick('tl-d39688e1338','pp-d39688e1343');" onmouseover="return tlOver('tl-d39688e1338','pp-d39688e1343');" onmouseout="return tlOut('tl-d39688e1338','pp-d39688e1343');">more</a>)
		</div><div class="subSecContent" id="seccnt_seqselect"><pre class="subSecCode"><code>def a = [12, -2, 0, 21, -100, 3];
assert(a<em>[x | x &gt;= 0]</em> == [12, 0, 21, 3]);               <span class="cmt">// select clause to filter sequences</span>
assert(a[c | c &lt; -10 or c &gt; 10] == [12, 21, -100]);
assert(a[c | <em>indexof c</em> mod 2 == 0] == [12, 0, -100]);  <span class="cmt">// <span class="idf">indexof</span> is the current index</span>
</code></pre></div></div><div class="subSecRow1" id="sec_seqinsert"><div class="subSecHead" id="sechd_seqinsert"><a name="seqinsert">Insert / Delete</a><br/>(<a href="#" id="tl-d39688e1375" class="dottedTooltip" onclick="return tlClick('tl-d39688e1375','pp-d39688e1380');" onmouseover="return tlOver('tl-d39688e1375','pp-d39688e1380');" onmouseout="return tlOut('tl-d39688e1375','pp-d39688e1380');">more</a>)
		</div><div class="subSecContent" id="seccnt_seqinsert"><pre class="subSecCode"><code>var a = ["a", "b", "c"];
<em>insert</em> "d" <em>into</em> a; assert(a == ["a", "b", "c", "d"]);                   <span class="cmt">// appends elements</span>
insert <em>["e", "f"]</em> into a; assert(a == ["a", "b", "c", "d", "e", "f"]);  <span class="cmt">// append sequence</span>

var b = [1, 2, 3];
insert 34 <em>before</em> b[2]; assert(b == [1, 2, 34, 3]);                      <span class="cmt">// <span class="idf">insert before</span></span>
insert [-1, 0] <em>before</em> b[0]; assert(b == [-1, 0, 1, 2, 34, 3]);

var c = [1, 2, 3];
insert 34 <em>after</em> c[2]; assert(c == [1, 2, 3, 34]);                       <span class="cmt">// <span class="idf">insert after</span></span>
insert [22, 23] <em>after</em> c[0]; assert(c == [1, 22, 23, 2, 3, 34]);

var d = [1, 2, 3, 4, 5, 6];
<em>delete</em> d[1]; assert(d == [1, 3, 4, 5, 6]);                              <span class="cmt">// delete single element</span>
delete <em>d[1..3]</em>; assert(d == [1, 6]);                                    <span class="cmt">// delete slice</span>
<em>delete d;</em> assert(d == []);                                              <span class="cmt">// delete all elements</span>

var e = [1, 3, 1, 4, 2, 2, 1];
delete <em>1 from e</em>; assert(e == [3, 4, 2, 2]);                             <span class="cmt">// delete by value</span>
</code></pre></div></div><div class="yahbar"><div class="yahprev"><a href="basictypes.xhtml">Prev<br/><span>Basic Types</span></a></div><div class="yahhere"><a href="#" onclick="return navToggle();">JavaFX Script Reference / Sequences</a><br/><a href="/reference/javafxscript/"><span>Single Page Mode</span></a>, <a href="#" onclick="return navToggle();"><span>Show Table of Content</span></a></div><div class="yahnext"><a href="conditionalsandloops.xhtml">Next<br/><span>Conditionals and Loops</span></a></div></div></div><div id="sidecolumn">
  	<div><h3>Useful Links</h3><div class="sidecolumnSubTitleLine"/>
  			<a href="http://www.javafx.com">JavaFX.com</a><br/>
  			<a href="http://openjfx.java.sun.com/current-build/doc/reference/JavaFXReference.html">JavaFX Reference</a><br/>
  			<a href="http://java.sun.com/javafx/1.2/docs/api/">JavaFX 1.2 APIs</a><br/>
  			<a href="http://java.sun.com/javafx/reference/">Sun JavaFX Documentation</a><br/>
  			<a href="http://learnjavafx.typepad.com/">James Weaver's JavaFX Blog</a><br/>
  		</div>
  </div></div></div><div id="footer"><div id="footer-content"><div id="footer-left"><div class="footerLine"><a href="/">Home</a> - <a href="/about">About Jarfiller</a> - <a href="/imprint.xhtml">Imprint</a></div><div class="footerLine">Please send feedback and corrections to <a href="mailto:tim@tjansen.de">tim@<span style="display: none">got you</span>tjansen.de</a>.</div><div class="footerLine"><a href="http://www.twitter.com/timjansen">Follow</a> me on Twitter.</div><div class="copyrightLine">© 2010 Tim Jansen; content licensed under <a href="http://creativecommons.org/licenses/by/3.0/us/">cc-by</a>; example source code is public domain
				</div></div><div id="footer-right"><a rel="license" href="http://creativecommons.org/licenses/by/3.0/us/"><img alt="Creative Commons License" style="border-width:0" src="../../images/ext/cc-by-88x31.png"/></a></div></div></div><div id="navbar" onclick="return navToggle();" onmouseover="document.getElementById('navbar').className='mouseover';" onmouseout="document.getElementById('navbar').className='';"/><div id="navcontainer"><div id="navlinks"><div id="navclosebar"><a href="#" onclick="return navClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="navpositionbar" class="navpositionbar"/><h2 id="navtitle">JavaFX Script Reference</h2><a id="nav_basictypes" class="navseclink" href="basictypes.xhtml#basictypes">Basic Types</a><a id="nav_booleans" class="navsublink" href="basictypes.xhtml#booleans">Booleans and Comparisons</a><a id="nav_variables" class="navsublink" href="basictypes.xhtml#variables">Variables</a><a id="nav_integers" class="navsublink" href="basictypes.xhtml#integers">Integers</a><a id="nav_numbers" class="navsublink" href="basictypes.xhtml#numbers">Numbers (float)</a><a id="nav_strings" class="navsublink" href="basictypes.xhtml#strings">Strings</a><a id="nav_duration" class="navsublink" href="basictypes.xhtml#duration">Duration</a><a id="nav_sequences" class="navseclink" href="#sequences" onclick="if (event.button == 0) return goTo('#sequences', true); else return true;">Sequences</a><a id="nav_creatingseqs" class="navsublink" href="#creatingseqs" onclick="if (event.button == 0) return goTo('#creatingseqs', true); else return true;">Creating sequences</a><a id="nav_seqreadbyslice" class="navsublink" href="#seqreadbyslice" onclick="if (event.button == 0) return goTo('#seqreadbyslice', true); else return true;">Reading by index / slice</a><a id="nav_seqwriteindexslice" class="navsublink" href="#seqwriteindexslice" onclick="if (event.button == 0) return goTo('#seqwriteindexslice', true); else return true;">Writing by index / slice</a><a id="nav_seqselect" class="navsublink" href="#seqselect" onclick="if (event.button == 0) return goTo('#seqselect', true); else return true;">Sequence Select Clause</a><a id="nav_seqinsert" class="navsublink" href="#seqinsert" onclick="if (event.button == 0) return goTo('#seqinsert', true); else return true;">Insert / Delete</a><a id="nav_conditionalsandloops" class="navseclink" href="conditionalsandloops.xhtml#conditionalsandloops">Conditionals and Loops</a><a id="nav_ifthenelse" class="navsublink" href="conditionalsandloops.xhtml#ifthenelse">if then else</a><a id="nav_for" class="navsublink" href="conditionalsandloops.xhtml#for">for</a><a id="nav_while" class="navsublink" href="conditionalsandloops.xhtml#while">while</a><a id="nav_break" class="navsublink" href="conditionalsandloops.xhtml#break">break</a><a id="nav_continue" class="navsublink" href="conditionalsandloops.xhtml#continue">continue</a><a id="nav_indexof" class="navsublink" href="conditionalsandloops.xhtml#indexof">indexof</a><a id="nav_functions" class="navseclink" href="functions.xhtml#functions">Functions</a><a id="nav_funcdefinition" class="navsublink" href="functions.xhtml#funcdefinition">Defining and Calling</a><a id="nav_closures" class="navsublink" href="functions.xhtml#closures">Closures and Anonymous Functions</a><a id="nav_classes" class="navseclink" href="classes.xhtml#classes">Classes</a><a id="nav_classdef" class="navsublink" href="classes.xhtml#classdef">Definition and Instantiating</a><a id="nav_objectinit" class="navsublink" href="classes.xhtml#objectinit">Object Initialization</a><a id="nav_complextrees" class="navsublink" href="classes.xhtml#complextrees">Complex Object Trees</a><a id="nav_objecteq" class="navsublink" href="classes.xhtml#objecteq">Object Equality</a><a id="nav_inheritance" class="navsublink" href="classes.xhtml#inheritance">Inheritance</a><a id="nav_mixins" class="navsublink" href="classes.xhtml#mixins">Mixins</a><a id="nav_abstract" class="navsublink" href="classes.xhtml#abstract">Abstract</a><a id="nav_bindings" class="navseclink" href="bindings.xhtml#bindings">Bindings</a><a id="nav_varbindings" class="navsublink" href="bindings.xhtml#varbindings">Variable Bindings</a><a id="nav_funcbound" class="navsublink" href="bindings.xhtml#funcbound">Functions / bound</a><a id="nav_bindobjs" class="navsublink" href="bindings.xhtml#bindobjs">Objects</a><a id="nav_exceptions" class="navseclink" href="exceptions.xhtml#exceptions">Exceptions (try/catch/finally)</a><a id="nav_throwcatch" class="navsublink" href="exceptions.xhtml#throwcatch">Throwing and Catching</a><a id="nav_finally" class="navsublink" href="exceptions.xhtml#finally">finally</a><a id="nav_interop" class="navseclink" href="interop.xhtml#interop">Java Interoperability</a><a id="nav_interop1" class="navsublink" href="interop.xhtml#interop1"/><a id="nav_packagesandaccessmods" class="navseclink" href="packagesandaccessmods.xhtml#packagesandaccessmods">Packages and Access Modifiers</a><a id="nav_packages" class="navsublink" href="packagesandaccessmods.xhtml#packages">Packages</a><a id="nav_accessmods" class="navsublink" href="packagesandaccessmods.xhtml#accessmods">Access Modifier</a><a id="nav_guifeatures" class="navseclink" href="guifeatures.xhtml#guifeatures">GUI Features</a><a id="nav_keyvalue" class="navsublink" href="guifeatures.xhtml#keyvalue">KeyValue</a><a id="nav_keyframe" class="navsublink" href="guifeatures.xhtml#keyframe">KeyFrame</a><a id="nav_localizedstrings" class="navsublink" href="guifeatures.xhtml#localizedstrings">Localized Strings</a></div></div><div id="popups"><div id="pp-d39688e1033" class="tooltip">Sequences are basically variable-length arrays. Null is the same as an empty sequence.</div><div id="pp-d39688e1108" class="tooltip">It is not possible to have a sequence containing other sequences. Sequences are flattened, inner sequences will be merged into the outer sequence.</div><div id="pp-d39688e1158" class="tooltip">Elements of sequences can be accessed using square brackets, like arrays in Java and C. However, using the <span class="idf">..</span> notation you can also create a slice of the original sequence.</div><div id="pp-d39688e1228" class="tooltip">Writing to sequence elements uses the same syntax as reading. You can set single elements as well as replace whole slices of the original sequence.</div><div id="pp-d39688e1343" class="tooltip">The select clause allows you to create a new sequence by filtering an existing one.</div><div id="pp-d39688e1380" class="tooltip"><span class="idf">insert</span> and <span class="idf">delete</span> are convenience statements for the manipulation of sequences. <span class="idf">insert</span> allows you to add single elements or sequences, and <span class="idf">delete</span> can remove them.</div><div id="ttCloseBar" class="closeBar"><a href="#" onclick="return tlClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div><div id="topicCloseBar" class="closeBar"><a href="#" onclick="return tpcClose();"><img src="../../images/close.png" height="16" width="16" alt="close"/></a></div></div></body></html>